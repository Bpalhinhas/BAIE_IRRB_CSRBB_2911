
/*******************************************************************************

Objetivo do Script:

	Preparação e formatação das tabelas de input para o processo.
	Finalizando com a construção da tabela MASTER que alimentará todo o processo
de cálculo. Esta tabela terá de ter toda a informação necessária para os calculos
de IRRBB e CSRBB.

	Neste script é assumido que o campo EXPOSICAO_ON_BALANCE representa
o montante on balance do capital, ou seja, sem juro.

********************************************************************************/

%MACRO TrataCredito(CREDITO, SMES, TIPO_AMORTIZACAO, T_CREDITO);
 
DATA &T_CREDITO.(KEEP= DATA_REF ID_OPERACAO ID_NAT TIPOLOGIA_OPERACAO ID_CONTRAPARTE NOME_CONTRAPARTE CLASSE_ENTIDADE 
					TAXA_JURO TAXA_JURO_EFECTIVA Stage DURATION MONTANTE_CAPITAL CCF
					DATA_INICIO	DATA_FIM MATURIDADE_RESIDUAL TIPO_TAXA	SPREAD	INDEXANTE PAIS MOEDA 	
					DATA_ULT_PAG DATA_PROX_PAG	FREQUENCIA_PAGAMENTO_JURO PERIOD_REVISAO_TAXA 	
					FLG_CONTA_VENCIDA FLG_WRITTE_OFF MONTANTE_WRITTE_OFF CAPITAL_VINCENDO
					JURO_VINCENDO JURO_VENCIDO CAPITAL_VENCIDO FREQUENCIA_PAGAMENTO
					EXPOSICAO_ON_BALANCE EXPOSICAO_OFF_BALANCE MONTANTE_JURO FLG_RAISIN FLG_DP_RENOVAVEL
					FLG_DP_MOBILIZAVEL FLG_TRANSACIONAL FLG_SME FLG_PENALIZACAO NIVEL_FAIR_VALUE MONTANTE_NOMINAL);
	LENGTH FREQUENCIA_PAGAMENTO $32 FREQUENCIA_PAGAMENTO_JURO $32;
	SET &CREDITO. (rename=(DIVISA=MOEDA PERIODICIDADE_REVIS_O_TAXA=PERIOD_REVISAO_TAXA 
					TIPO_TAXA_JURO=TIPO_TAXA DATA_ULTIMO_PAGAMENTO_CUPAO=DATA_ULT_PAG
					DATA_PROXIMA_PAGAMENTO_CUPAO=DATA_PROX_PAG DT_REFERENCIA=DATA_REF
					ID_OPERACAO=ID_OPERACAO_I TAXA_JURO_CONTRATUAL=TAXA_JURO_CONTRATUAL_I
					TAXA_JURO_EFECTIVA=TAXA_JURO_EFECTIVA_I
					 FREQUENCIA_PAGAMENTO=FREQUENCIA_PAGAMENTO_JURO 
					FREQUENCIA_PAGAMENTO_CAP=FREQUENCIA_PAGAMENTO));
		WHERE (FLG_WRITTE_OFF <>"1");
		ID_OPERACAO=strip(ID_OPERACAO_I);
		L_ID_OP=LENGTH(ID_OPERACAO);
		ID_NAT = substr(ID_OPERACAO,L_ID_OP+1-5,2);
		/*ID_CONTRAPARTE = PUT(ID_CONTRAPARTE_I, Z10.);*/
		IF TIPO_TAXA="Fixa" OR TIPO_TAXA="Fixo" THEN
			TIPO_TAXA="F";
		IF TIPO_TAXA="Variável" THEN
			TIPO_TAXA="V";
		CAPITAL_VENCIDO=-SLD_CAP_VENCIDO;
		CAPITAL_VINCENDO=-SALDO;
		MONTANTE_NOMINAL=0;
		JURO_VINCENDO=-SLD_JURO_VINCENDO;
		JURO_VENCIDO=-SLD_JURO_VENCIDO;
		MONTANTE_CAPITAL=(CAPITAL_VINCENDO+CAPITAL_VENCIDO);
		MONTANTE_JURO=(JURO_VINCENDO+JURO_VENCIDO);
		TIPOLOGIA_OPERACAO="CREDITO";
		TAXA_JURO=TAXA_JURO_CONTRATUAL_I/100;
		TAXA_JURO_EFECTIVA=TAXA_JURO_EFECTIVA_I/100;
		DURATION=intck('day', DATA_REF, DATA_FIM)/365;
		EXPOSICAO_ON_BALANCE=MONTANTE_CAPITAL+MONTANTE_JURO;
		IF FREQUENCIA_PAGAMENTO='M' THEN FREQUENCIA_PAGAMENTO='Mensal';
		IF FREQUENCIA_PAGAMENTO='T' THEN FREQUENCIA_PAGAMENTO='Trimestral';
		IF FREQUENCIA_PAGAMENTO='S' THEN FREQUENCIA_PAGAMENTO='Semestral';
		IF FREQUENCIA_PAGAMENTO='Y' THEN FREQUENCIA_PAGAMENTO='Anual';
		FLG_RAISIN='0';
		FLG_DP_RENOVAVEL='0';
		FLG_DP_MOBILIZAVEL='0';
		FLG_TRANSACIONAL='0';
		FLG_SME='0';
		FLG_PENALIZACAO='0';
		NIVEL_FAIR_VALUE='0';

	RUN;
/*Correcao manual do tipo de amortizacao após realizar a validacao de se a tabela manual está preenchida
	Caso o input manual esteja preenchido o mesmo tem de conter todos os IDs operacao existentes na tabela de depósitos quase contrário
	correremos o risco de perder informacao
	Caso o input não se encontre preenchido a informacao presente na tabela inicial sera mantida*/
data _null_;
    if 0 then set &TIPO_AMORTIZACAO. nobs=num_obs;
    call symputx('num_obs', num_obs);
run;

%put Number of Observations: &num_obs;

%if &num_obs > 0 %then %do;
	
	DATA &T_CREDITO.(DROP=TIPO_AMORTIZACAO);
		SET &T_CREDITO.;
		RUN;	


 	PROC SQL;
		CREATE TABLE &T_CREDITO. AS
		SELECT O.*
			,CASE WHEN A.N_AMORT>1 THEN "Amortização Constante"
					WHEN A.N_AMORT=1 AND (A.MESANO_UNICA_AMORT=INTNX('MONTH', DATA_FIM,0,'END')) THEN "BULLET"
					WHEN (A.N_AMORT=0 AND O.MONTANTE_CAPITAL=0) THEN "Amortização Constante"
					WHEN A.CRIT_RENDAS>0 THEN "Pagamento Constante"
				ELSE "BULLET"
				END AS TIPO_AMORTIZACAO
		FROM &T_CREDITO. O
		LEFT JOIN &TIPO_AMORTIZACAO. A
		ON O.ID_OPERACAO=A.GBAMCONTA;
	QUIT;
%end;

/*Correcao manual da FLG de SME Testando primeiro se a tabela manual está vazia
	Caso o input manual esteja preenchido o mesmo tem de conter todos os IDs operacao existentes na tabela de depósitos quase contrário
	correremos o risco de perder informacao*/
data _null_;
    if 0 then set &SMES. nobs=num_obs;
    call symputx('num_obs', num_obs);
run;

%put Number of Observations: &num_obs;

%if &num_obs > 0 %then %do;
	
	DATA &T_CREDITO.(DROP=FLG_SME);
		SET &T_CREDITO.;
		RUN;	

	DATA AUX.SMES(KEEP=ID_OPERACAO FLG_SME);
		SET &SMES.;
		ID_CLIENTE = scan(ID, 1, '.');
   		NATUREZA = scan(ID, 2, '.');
    	SEQUENCIA = scan(ID, 3, '.');
		SEQ = INPUT(SEQUENCIA,3.);
		ID_OPERACAO_A = CATS(ID_CLIENTE, NATUREZA, PUT(SEQ,Z3.));
		ID_OPERACAO=PUT(ID_OPERACAO_A,15.);
	RUN;

	PROC SORT DATA=AUX.SMES OUT=AUX.SMES NODUPREC;
    BY _ALL_;
	RUN;

 	PROC SQL;
		CREATE TABLE &T_CREDITO. AS
		SELECT O.*
			,CASE WHEN SME.FLG_SME NOT IS MISSING THEN SME.FLG_SME
				WHEN SME.FLG_SME IS MISSING THEN '0'
				END AS FLG_SME
		FROM &T_CREDITO. O
		LEFT JOIN AUX.SMES SME
		ON O.ID_OPERACAO=SME.ID_OPERACAO;
	QUIT;
%end;


%MEND;
 
%MACRO TrataObrigacoes(OBRIGACOES, N_FAIRVALUE, DT_CALL_OPTION, T_OBRIGACOES);
 
DATA &T_OBRIGACOES.(KEEP=ID_OPERACAO DATA_REF ID_CONTRAPARTE NOME_CONTRAPARTE DSC_PRODUTO DSC_DOSSIER	TAXA_JURO
						DATA_INICIO	DATA_FIM MATURIDADE_RESIDUAL TIPO_TAXA	SPREAD INDEXANTE PAIS MONTANTE_CAPITAL
						DATA_REPRICING	DATA_ULT_PAG DATA_PROX_PAG	TIPOLOGIA_OPERACAO MONTANTE_JURO
						FREQUENCIA_PAGAMENTO_JURO PERIOD_REVISAO_TAXA MOEDA SALDO JUSTO_VALOR	RATING
						EXPOSICAO_ON_BALANCE DURATION FIXING CLASSE_ENTIDADE FLG_RAISIN FLG_DP_RENOVAVEL
						FLG_DP_MOBILIZAVEL FLG_TRANSACIONAL FLG_SME FLG_PENALIZACAO CAPITAL_VENCIDO
						CAPITAL_VINCENDO JURO_VENCIDO JURO_VINCENDO FREQUENCIA_PAGAMENTO EXPOSICAO_OFF_BALANCE MONTANTE_NOMINAL);
	LENGTH FREQUENCIA_PAGAMENTO $32 FREQUENCIA_PAGAMENTO_JURO $32;
	SET &OBRIGACOES. (rename=(REF_DOSSIER=DSC_PRODUTO  DT_REFERENCIA=DATA_REF SPREAD=SPREAD_NM
					TIPO_TAXA_JURO=TIPO_TAXA DATA_ULT_PAGAMENTO_CUPAO=DATA_ULT_PAG INDEXANTE=CURVA
					DATA_PROX_PAGAMENTO_CUPAO=DATA_PROX_PAG TIPOLOGIA=TIPOLOGIA_OPERACAO 
					PERIODICIDADE_REVISAO_TAXA=PERIOD_REVISAO_TAXA JUSTO_VALOR=CAPITAL_VINCENDO ID_OPERACAO=ID_OPERACAO_I
					GROSS_CARRYING_AMOUNT=SALDO TAXA_JURO_CONTRATUAL=TAXA_JURO_CONTRATUAL_I INDEXANTE_0001=INDEXANTE
					 FREQUENCIA_PAGAMENTO_CAP=FREQUENCIA_PAGAMENTO));
		TIPOLOGIA_OPERACAO="OBRIGACOES";
		EXPOSICAO_OFF_BALANCE=0;
		TAXA_JURO=TAXA_JURO_CONTRATUAL_I/100;
		DURATION=intck('day', DATA_REF, DATA_FIM)/365;
		SPREAD=VALOR_SPREAD;
		CAPITAL_VENCIDO=0;
		MONTANTE_CAPITAL=VLR_NOMINAL*(QTD_COMPRA-QTD_VENDA);
		MONTANTE_NOMINAL=MONTANTE_CAPITAL;
		JURO_VENCIDO=0;
		JURO_VINCENDO=JUR_TOTAL-JUR_CORR;
		MONTANTE_JURO=JUR_TOTAL;
		EXPOSICAO_ON_BALANCE=MONTANTE_CAPITAL+MONTANTE_JURO;
		ID_OPERACAO=CATX('_',ID_OPERACAO_I,DSC_PRODUTO, CENTRAL_CUSTODIA);
		FLG_RAISIN='0';
		FLG_DP_RENOVAVEL='0';
		FLG_DP_MOBILIZAVEL='0';
		FLG_TRANSACIONAL='0';
		FLG_SME='0';
		FLG_PENALIZACAO='0';
	RUN;

/*Validacao da existencia de nivel fair value no input manual
	caso afirmativo substituicao da coluna*/
data _null_;
    if 0 then set &N_FAIRVALUE. nobs=num_obs;
    call symputx('num_obs', num_obs);
run;

%put Number of Observations: &num_obs;

%if &num_obs > 0 %then %do;
	
	DATA &T_OBRIGACOES.(DROP=NIVEL_FAIR_VALUE);
		SET &T_OBRIGACOES.;
		RUN;	


	PROC SQL;
		CREATE TABLE &T_OBRIGACOES. AS
			SELECT O.*
			,FV.NIVEL_FAIRVALUE AS NIVEL_FAIR_VALUE
		FROM &T_OBRIGACOES. O
		LEFT JOIN &N_FAIRVALUE. FV
		ON O.ID_OPERACAO=FV.ID_OPERACAO;
	QUIT;
%end;

/*Validacao da existencia da data calll to option no input manual
	caso afirmativo substituicao da coluna*/
data _null_;
    if 0 then set &DT_CALL_OPTION. nobs=num_obs;
    call symputx('num_obs', num_obs);
run;

%put Number of Observations: &num_obs;

%if &num_obs > 0 %then %do;
	
	DATA &T_OBRIGACOES.(DROP=DATA_CALL_OPTION);
		SET &T_OBRIGACOES.;
		RUN;	


	PROC SQL;
		CREATE TABLE &T_OBRIGACOES. AS
			SELECT O.*
			,CO.CALL_OPTION AS DATA_CALL_OPTION
		FROM &T_OBRIGACOES. O
		LEFT JOIN &DT_CALL_OPTION. CO
		ON O.ID_OPERACAO=CO.ISIN;
	QUIT;
%end;

DATA &T_OBRIGACOES.;
	SET &T_OBRIGACOES.(RENAME=(DATA_FIM=DATA_FIM_A DATA_PROX_PAG=DATA_PROX_PAG_A));
		IF DATA_CALL_OPTION<DATA_FIM_A AND DATA_CALL_OPTION>DATA_REF THEN DATA_FIM=DATA_CALL_OPTION;
			ELSE DATA_FIM=DATA_FIM_A;
		IF DATA_CALL_OPTION<DATA_PROX_PAG_A AND DATA_CALL_OPTION>DATA_REF AND DATA_CALL_OPTION>DATA_ULT_PAG THEN DATA_PROX_PAG=DATA_CALL_OPTION;
			ELSE DATA_PROX_PAG=DATA_PROX_PAG_A;
 		
	FORMAT DATA_PROX_PAG DATA_FIM date9.;
	RUN;

%MEND;
 
%MACRO TrataCartasCred(CARTAS_CRED, SMES, CCF, T_CARTAS_CRED);
 
DATA AUX.AUX_CARTAS_CRED_1(KEEP= DATA_REF ID_OPERACAO DESCONTO MOEDA CLASSE_ENTIDADE CFF STAGE
						EXPOSICAO_OFF_BALANCE EXPOSICAO_ON_BALANCE TIPO_TAXA TAXA_JURO INDEXANTE PAIS
						DURATION TIPOLOGIA_OPERACAO DT_INI_CARTA_CREDITO DT_VENC_CARTA_CREDITO PER_PAGAMENTO
						DT_INI_DESCONTO	DT_VENC_DESCONTO MONTANTE_JURO MONTANTE_CAPITAL FREQUENCIA_PAGAMENTO
						FREQUENCIA_PAGAMENTO_JURO TIPO_AMORTIZACAO DATA_ULT_PAGAMENTO_CUPAO DATA_PROXIMA_REPRICING
						CAPITAL_VENCIDO CAPITAL_VINCENDO JURO_VINCENDO JURO_VENCIDO FLG_RAISIN FLG_DP_RENOVAVEL
						FLG_DP_MOBILIZAVEL FLG_TRANSACIONAL FLG_SME FLG_PENALIZACAO NIVEL_FAIR_VALUE MONTANTE_NOMINAL);
	LENGTH FREQUENCIA_PAGAMENTO $32 FREQUENCIA_PAGAMENTO_JURO $32;

	SET &CARTAS_CRED. (rename=(TX_JURO=TAXA_JURO  DT_REFERENCIA=DATA_REF 
						MONTANTE_DESCONTO=MONTANTE_CAPITAL JURO_TOTAL=MONTANTE_JURO PAIS_BANCO_EMITENTE=PAIS));
		/*WHERE MOEDA='EUR' OR  MOEDA='USD';*/
		DURATION=intck('day', DATA_REF, DT_VENC_CARTA_CREDITO)/365;
		ID_OPERACAO=CARTA_CREDITO;
		TIPOLOGIA_OPERACAO="CARTAS_CRED";
		IF TIPO_TAXA="Taxa Fixa" OR TIPO_TAXA="Taxa Fixo" OR TIPO_TAXA="Fixo" OR TIPO_TAXA="Fixa" THEN
			TIPO_TAXA="F";
		IF TIPO_TAXA="Variável" OR TIPO_TAXA="Taxa Variável" THEN
			TIPO_TAXA="V";
		IF MONTANTE_CAPITAL=. THEN MONTANTE_CAPITAL=0;
		EXPOSICAO_ON_BALANCE=MONTANTE_CAPITAL+MONTANTE_JURO;
		FREQUENCIA_PAGAMENTO_JURO=FREQUENCIA_PAGAMENTO;
		EXPOSICAO_OFF_BALANCE=MONTANTE_CARTA_CREDITO-MONTANTE_CAPITAL;
		CAPITAL_VENCIDO=0;
		MONTANTE_NOMINAL=0;
		CAPITAL_VINCENDO=MONTANTE_CAPITAL;
		JURO_VINCENDO=MONTANTE_JURO;
		JURO_VENCIDO=0;
		FLG_RAISIN='0';
		FLG_DP_RENOVAVEL='0';
		FLG_DP_MOBILIZAVEL='0';
		FLG_TRANSACIONAL='0';
		FLG_SME='0';
		FLG_PENALIZACAO='0';
		NIVEL_FAIR_VALUE='0';
		
	RUN;
%PUT"1";	
 PROC SQL;
	CREATE TABLE AUX.AUX_CARTAS_CRED_2 AS
	SELECT *
	,CASE WHEN DESCONTO <> 'NULL' THEN DT_INI_DESCONTO 
		ELSE DT_INI_CARTA_CREDITO
		END AS DATA_INICIO
	,CASE WHEN DESCONTO <> 'NULL' THEN DT_VENC_DESCONTO
		ELSE DT_VENC_CARTA_CREDITO+PER_PAGAMENTO
		END AS DATA_FIM
	,CASE WHEN DESCONTO <> 'NULL' 
		THEN TAXA_JURO/12/30*MONTANTE_CAPITAL*(intck('day', CALCULATED DATA_INICIO, DATA_REF)) 
			END AS JURO_VENCIDO
	,MONTANTE_JURO - CALCULATED JURO_VENCIDO AS JURO_VINCENDO
	FROM AUX.AUX_CARTAS_CRED_1 
	QUIT;

DATA AUX.AUX_CARTAS_CRED_2(DROP= PER_PAGAMENTO);
	SET AUX.AUX_CARTAS_CRED_2;
	FORMAT DATA_FIM date9.;
	FORMAT DATA_INICIO date9.;
	RUN;

 PROC SQL;
	CREATE TABLE AUX.AUX_CARTAS_CRED_3 AS
	SELECT CART.*
	,C.CCF 
	
	FROM AUX.AUX_CARTAS_CRED_2 CART
	LEFT JOIN &CCF. C
	ON CART.ID_OPERACAO=C.CARTA_CREDITO AND CART.DESCONTO=C.DESCONTO;
	QUIT;

/*Validação do input manual das SMES e substituicao caso input nao esteja vazio*/
data _null_;
    if 0 then set &SMES. nobs=num_obs;
    call symputx('num_obs', num_obs);
run;

%put Number of Observations: &num_obs;

%if &num_obs > 0 %then %do;
	DATA AUX.SMES(KEEP=ID_OPERACAO FLG_SME);
		SET &SMES.;
			ID_OPERACAO=ID;
	RUN;

	PROC SORT DATA=AUX.SMES OUT=AUX.SMES NODUPREC;
    BY _ALL_;
	RUN;

 PROC SQL;
	CREATE TABLE &T_CARTAS_CRED. AS
		SELECT O.*
			,CASE WHEN SME.FLG_SME NOT IS MISSING THEN SME.FLG_SME
				WHEN SME.FLG_SME IS MISSING THEN '0'
				END AS FLG_SME
			
		FROM AUX.AUX_CARTAS_CRED_3 O
		LEFT JOIN AUX.SMES SME
		ON O.ID_OPERACAO=SME.ID_OPERACAO;
	QUIT;
%end;

%MEND;
 
%MACRO TrataDP_DO(DP_DO, SMES, PENALIZACOES,T_DP_DO, T_CC_CR);
 
DATA AUX.AUX_DP_DO_0(KEEP= DATA_REF ID_OPERACAO_I ID_OPERACAO_L ID_CONTRAPARTE	NOME_CONTRAPARTE REF_CAE CLASSE_ENTIDADE TIPOLOGIA_OPERACAO	
						FER_PRODUTO	DSC_PRODUTO	FLG_RAISIN TAXA_JURO TAXA_JURO_EFECTIVA	DATA_INICIO	
						DATA_FIM MATURIDADE_RESIDUAL TIPO_TAXA SPREAD INDEXANTE PAIS FLG_DP_RENOVAVEL 
						FLG_DP_MOBILIZAVEL	DATA_ULTIMO_REPRICING DATA_PROXIMA_REPRICING EXPOSICAO_ON_BALANCE
						FREQUENCIA_PAGAMENTO_JURO PERIOD_REVISAO_TAXA FREQUENCIA_PAGAMENTO EXPOSICAO_OFF_BALANCE
						MOEDA MONTANTE_DP_COLATERAL DURATION FLG_PENALIZACAO FLG_SME JURO_VINCENDO JURO_VENCIDO
						CAPITAL_VINCENDO MONTANTE_CAPITAL MONTANTE_JURO CAPITAL_VENCIDO FLG_TRANSACIONAL
						M_CRED M_DEB MONTANTE_NOMINAL);
LENGTH TIPOLOGIA_OPERACAO $20. FREQUENCIA_PAGAMENTO $32 FREQUENCIA_PAGAMENTO_JURO $32;;
	SET &DP_DO. (rename=(PERIODICIDADE_REVISAO_TAXA=PERIOD_REVISAO_TAXA   
					DT_REFERENCIA=DATA_REF TAXA_JURO_CONTRATUAL=TAXA_JURO_CONTRATUAL_I 
					TAXA_JURO_EFECTIVA=TAXA_JURO_EFECTIVA_I SLD=MONTANTE_CAPITAL
					SLD_JURO_VINCENDO=JURO_VINCENDO TOTAL_OPR_CREDITO=M_CRED
					TOTAL_OPR_DEBITO=M_DEB));
		WHERE (TIPOLOGIA_OPERACAO="DP" OR TIPOLOGIA_OPERACAO="DO") AND (FLG_WRITE_OFF <>"1");
		ID_OPERACAO_I=strip(ID_OPERACAO);
		L_ID_OP=LENGTH(ID_OPERACAO_I);
		ID_NAT_SEQ = substr(ID_OPERACAO_I,L_ID_OP+1-5,5);
		ID_SEQ = SUBSTR(ID_NAT_SEQ,2+1,3);
		NAT = SUBSTR(ID_NAT_SEQ,1,2);
		ID_CONTRAPARTE_I = strip(ID_CONTRAPARTE);
		ID_SEQ_I=INPUT(ID_SEQ,BEST12.);
		ID_OPERACAO_L=CATS(ID_CONTRAPARTE_I,NAT,ID_SEQ_I);
		IF TIPO_TAXA="Taxa Fixa" OR TIPO_TAXA="Taxa Fixo" OR TIPO_TAXA="NULL" OR TIPO_TAXA="N/A" THEN
			TIPO_TAXA="F";
		IF TIPO_TAXA="Taxa Variável" THEN
			TIPO_TAXA="V";
		DURATION=intck('day', DATA_REF, DATA_FIM)/365;
		TAXA_JURO=TAXA_JURO_CONTRATUAL_I/100;
		TAXA_JURO_EFECTIVA=TAXA_JURO_EFECTIVA_I/100;
		CAPITAL_VINCENDO=MONTANTE_CAPITAL;
		CAPITAL_VENCIDO=0;
		MONTANTE_NOMINAL=0;
		JURO_VENCIDO=0;
		MONTANTE_JURO=JURO_VINCENDO+JURO_VENCIDO;
		EXPOSICAO_ON_BALANCE=MONTANTE_CAPITAL+MONTANTE_JURO;
		EXPOSICAO_OFF_BALANCE=0;
		IF (M_CRED/12 >= 2) AND (M_DEB/12 >= 2) THEN
			FLG_TRANSACIONAL='1';
		ELSE FLG_TRANSACIONAL='0';
	RUN;


/*Correcao manual da FLG de SME Testando primeiro se a tabela manual está vazia
	Caso o input manual esteja preenchido o mesmo tem de conter todos os IDs operacao existentes na tabela de depósitos quase contrário
	correremos o risco de perder informacao*/
data _null_;
    if 0 then set &SMES. nobs=num_obs;
    call symputx('num_obs', num_obs);
run;

%put Number of Observations: &num_obs;

%if &num_obs > 0 %then %do;
	DATA AUX.AUX_DP_DO_1(DROP=FLG_SME);
		SET AUX.AUX_DP_DO_0;
		RUN;

    DATA AUX.SMES(KEEP=ID_OPERACAO FLG_SME);
		SET &SMES.;
			ID_CLIENTE = scan(ID, 1, '.');
    		NATUREZA = scan(ID, 2, '.');
    		SEQUENCIA = scan(ID, 3, '.');
			SEQ = INPUT(SEQUENCIA,3.);
			ID_OPERACAO_A = CATS(ID_CLIENTE, NATUREZA, PUT(SEQ,Z3.));
			ID_OPERACAO=PUT(ID_OPERACAO_A,15.);
		RUN;

	PROC SORT DATA=AUX.SMES OUT=AUX.SMES NODUPREC;
    BY _ALL_;
	RUN;

	PROC SQL;
		CREATE TABLE AUX.AUX_DP_DO_2 AS
			SELECT O.*
			,CASE WHEN SME.FLG_SME NOT IS MISSING THEN SME.FLG_SME
				WHEN SME.FLG_SME IS MISSING THEN "0"
				END AS FLG_SME
			FROM AUX.AUX_DP_DO_1 O
			LEFT JOIN AUX.SMES SME
			ON O.ID_OPERACAO_I=SME.ID_OPERACAO;
		QUIT;
%end;


DATA AUX.AUX_DP_DO_3(DROP=FLG_PENALIZACAO);
	SET AUX.AUX_DP_DO_2(RENAME=(ID_OPERACAO_I=ID_OPERACAO));
	TIPOLOGIA_OPERACAO=TIPOLOGIA_OPERACAO || "             ";
	RUN;

DATA AUX.AUX_PENALIZACOES_0(KEEP=CONTA MOEDA DT_CONSTITUICAO DT_VENCIMENTO DATA_VALOR);
	SET &PENALIZACOES.;
	WHERE ((DESC_MOVIMENTO LIKE '%Mobilização%') OR (DESC_MOVIMENTO LIKE '%Mobilizaçao%') OR (DESC_MOVIMENTO LIKE '%Mobilizacao%')
				OR (DESC_MOVIMENTO LIKE '%MOBILIZAÇAO%') OR (DESC_MOVIMENTO LIKE '%MOBILIZAÇÃO%') OR (DESC_MOVIMENTO LIKE '%MOBILIZACAO%'))
			AND (DATA_VALOR>=DT_CONSTITUICAO);
			
	RUN;

PROC SQL;
	CREATE TABLE AUX.AUX_PENALIZACOES_1 AS 
		SELECT
		PN.CONTA
		,PN.MOEDA
		,PN.DT_CONSTITUICAO
		,PN.DT_VENCIMENTO	
		,CASE WHEN (PN.DT_VENCIMENTO >=DP.DATA_REF) AND (PN.DT_CONSTITUICAO<DP.DATA_REF) AND (DP.CLASSE_ENTIDADE = "Households") AND (DP.FLG_RAISIN = '0') THEN "Y" 
			WHEN (DP.CLASSE_ENTIDADE <> "Households") AND (DP.FLG_RAISIN = '0') THEN "N/A"
			WHEN DP.FLG_DP_MOBILIZAVEL = "N/A"  THEN "N/A"
			WHEN (DP.FLG_RAISIN = '1') AND (intck('day', PN.DATA_VALOR, PN.DT_CONSTITUICAO)<=15) THEN "N"
			WHEN (DP.FLG_RAISIN = '1') AND (intck('day', PN.DATA_VALOR, PN.DT_CONSTITUICAO)>15) THEN "Y"
			ELSE 'N'
				END AS FLG_PENALIZACAO
		FROM AUX.AUX_PENALIZACOES_0 AS PN
		LEFT JOIN AUX.AUX_DP_DO_3 AS DP
		ON DP.ID_OPERACAO=PN.CONTA AND DP.MOEDA=PN.MOEDA AND DP.DATA_INICIO=PN.DT_CONSTITUICAO AND DP.DATA_FIM=PN.DT_VENCIMENTO;
		QUIT;

	PROC SORT DATA=AUX.AUX_PENALIZACOES_1 OUT=AUX.PENALIZACOES NODUPREC;
    BY _ALL_;
	RUN;

/*As penalizações são sempre de 50% excepto quando acontecem na Raisin que serão sempre de 100%*/
PROC SQL;
	CREATE TABLE &T_DP_DO. AS
	SELECT DP.*
	,FLG_PENALIZACAO

	FROM AUX.AUX_DP_DO_3 DP
	LEFT JOIN AUX.PENALIZACOES PN 
	ON DP.ID_OPERACAO=PN.CONTA AND DP.MOEDA=PN.MOEDA AND DP.DATA_INICIO=PN.DT_CONSTITUICAO AND DP.DATA_FIM=PN.DT_VENCIMENTO;
	QUIT;


/*TODO O montante utilizado no momento e o convertido e nao pode!*/
DATA &T_CC_CR.(KEEP= DATA_REF ID_OPERACAO_I ID_OPERACAO_L ID_CONTRAPARTE DURATION NOME_CONTRAPARTE CLASSE_ENTIDADE TIPOLOGIA_OPERACAO	
						FER_PRODUTO	DSC_PRODUTO	FLG_RAISIN	TAXA_JURO TAXA_JURO_EFECTIVA CCF DATA_INICIO
						DATA_FIM MATURIDADE_RESIDUAL TIPO_TAXA	SPREAD	INDEXANTE	PAIS FLG_DP_RENOVAVEL EXPOSICAO_OFF_BALANCE
						FLG_DP_MOBILIZAVEL	DATA_ULTIMO_REPRICING	DATA_PROXIMA_REPRICING	FREQUENCIA_PAGAMENTO PERIOD_REVISAO_TAXA	
						MOEDA	EXPOSICAO_ON_BALANCE MONTANTE_DP_COLATERAL	FLG_PENALIZACAO EXTRAPATRIMONIAL FREQUENCIA_PAGAMENTO_JURO
						CAPITAL_VENCIDO CAPITAL_VINCENDO JURO_VINCENDO JURO_VENCIDO MONTANTE_JURO FLG_TRANSACIONAL FLG_SME
						FLG_PENALIZACAO NIVEL_FAIR_VALUE MONTANTE_NOMINAL);
LENGTH TIPOLOGIA_OPERACAO $20. FREQUENCIA_PAGAMENTO $32 FREQUENCIA_PAGAMENTO_JURO $32;;
	SET &DP_DO. (rename=(PERIODICIDADE_REVISAO_TAXA=PERIOD_REVISAO_TAXA   
						DT_REFERENCIA=DATA_REF TAXA_JURO_CONTRATUAL=TAXA_JURO_CONTRATUAL_I 
						TAXA_JURO_EFECTIVA=TAXA_JURO_EFECTIVA_I));
		WHERE (TIPOLOGIA_OPERACAO NE "DP") AND (TIPOLOGIA_OPERACAO NE "DO");
		ID_OPERACAO_I=strip(ID_OPERACAO);

		L_ID_OP=LENGTH(ID_OPERACAO_I);
		ID_NAT_SEQ = substr(ID_OPERACAO_I,L_ID_OP+1-5,5);
		ID_SEQ = SUBSTR(ID_NAT_SEQ,2+1,3);
		NAT = SUBSTR(ID_NAT_SEQ,1,2);
		ID_CONTRAPARTE_I = strip(ID_CONTRAPARTE);
		ID_SEQ_I=INPUT(ID_SEQ,BEST12.);
		ID_OPERACAO_L=CATS(ID_CONTRAPARTE_I,NAT,ID_SEQ_I);
		IF TIPO_TAXA="Taxa Fixa" OR TIPO_TAXA="Taxa Fixo" OR TIPO_TAXA="NULL" OR TIPO_TAXA="N/A" THEN
			TIPO_TAXA="F";
		IF TIPO_TAXA="Taxa Variável" THEN
			TIPO_TAXA="V";
		DURATION=intck('day', DATA_REF, DATA_FIM)/365;
		EXPOSICAO_OFF_BALANCE=-VLR_CRD;
		TAXA_JURO=TAXA_JURO_CONTRATUAL_I/100;
		TAXA_JURO_EFECTIVA=TAXA_JURO_EFECTIVA_I/100;
		EXPOSICAO_ON_BALANCE=0;
		CAPITAL_VENCIDO=0;
		MONTANTE_NOMINAL=0;
		CAPITAL_VINCENDO=0;
		JURO_VINCENDO=0;
		JURO_VENCIDO=0;
		MONTANTE_JURO=0;
		FLG_RAISIN='0';
		FLG_DP_RENOVAVEL='0';
		FLG_DP_MOBILIZAVEL='0';
		FLG_TRANSACIONAL='0';
		FLG_SME='0';
		FLG_PENALIZACAO='0';
		NIVEL_FAIR_VALUE='0';
	RUN;

DATA &T_CC_CR.;
	SET &T_CC_CR.(RENAME=(ID_OPERACAO_I=ID_OPERACAO));
	TIPOLOGIA_OPERACAO=TIPOLOGIA_OPERACAO || "             ";
	RUN;

%MEND;
 
%MACRO TrataBalancete(BALANCETE_EUR, BALANCETE_USD, BAL_CONTA, BALANCETE);
 
DATA AUX.BALANCETE_EUR(KEEP= ID DESCRICAO MONTANTE_CAPITAL MOEDA DATA_REF);
	SET &BALANCETE_EUR.(RENAME=(BCCCB=ID BCDCCB=DESCRICAO CTBCSAC=MONTANTE_CAPITAL));
	MOEDA="EUR";
	DATA_REF = input(put(BCDTRP, 8.), yymmdd8.);
	format DATA_REF yymmdd10.;
	RUN;
 
DATA AUX.BALANCETE_USD(KEEP= ID DESCRICAO MONTANTE_CAPITAL MOEDA DATA_REF);
	SET &BALANCETE_USD.(RENAME=(BCCCB=ID BCDCCB=DESCRICAO CTBCSAC=MONTANTE_CAPITAL));
	MOEDA="USD";
	DATA_REF = input(put(BCDTRP, 8.), yymmdd8.);
	format DATA_REF yymmdd10.;
	RUN;
 
DATA AUX.BALANCETE_AGREG;
	SET AUX.BALANCETE_EUR AUX.BALANCETE_USD;
		DATA_FIM= intnx('day', DATA_REF, 1);
		format DATA_FIM yymmdd10.;
		DATA_INICIO=DATA_REF;
		format DATA_INICIO yymmdd10.;
		DATA_PROX_PAG=DATA_FIM;
		format DATA_PROX_PAG yymmdd10.;
		DATA_PROXIMA_REPRICING=DATA_FIM;
		format DATA_PROXIMA_REPRICING yymmdd10.;
		TIPO_TAXA="F";
		TAXA_JURO_EFECTIVA=0;
		TIPOLOGIA_OPERACAO="BALANCETE";
		ID_OPERACAO=ID;
		EXPOSICAO_ON_BALANCE=MONTANTE_CAPITAL;
		EXPOSICAO_OFF_BALANCE=0;
		CAPITAL_VENCIDO=0;
		CAPITAL_VINCENDO=MONTANTE_CAPITAL;
		JURO_VINCENDO=0;
		JURO_VENCIDO=0;
		MONTANTE_NOMINAL=0;
		MONTANTE_JURO=0;
		FLG_RAISIN='0';
		FLG_DP_RENOVAVEL='0';
		FLG_DP_MOBILIZAVEL='0';
		FLG_TRANSACIONAL='0';
		FLG_SME='0';
		FLG_PENALIZACAO='0';
		NIVEL_FAIR_VALUE='0';

		DURATION=intck('day', DATA_REF, DATA_FIM)/365;
	RUN;

PROC SQL;
	CREATE TABLE &BALANCETE. AS
		SELECT B.*
		,CASE WHEN C.Eleg_vel='' THEN "N" ELSE C.Eleg_vel END AS FLAG_LEGIV

		FROM AUX.BALANCETE_AGREG B
		LEFT JOIN &BAL_CONTA. C
		ON B.ID=C.Rubricas_Contabil_sticas;
		QUIT;

DATA &BALANCETE.(DROP=FLAG_LEGIV);
	SET &BALANCETE.;
	WHERE FLAG_LEGIV="Y";
	RUN;
 
 
%MEND;
 

%MACRO Trata_OperMercado(CEDIDO, TOMADO, T_CEDENCIAS, T_TOMADAS);

/*Assumindo que a coluna saldo representa o montante exposto em off-balance fazemos o seguinte tratamento*/

DATA &T_CEDENCIAS.(KEEP= DATA_REF ID_OPERACAO REF_TIPO_OPERACAO	ID_CONTRAPARTE	DSC_CONTRAPARTE	TIPOLOGIA_OPERACAO
					CLASSE_ENTIDADE	TAXA_JURO DATA_INICIO DATA_FIM MATURIDADE_RESIDUAL DURATION MONTANTE_NOMINAL
					TIPO_TAXA PAIS EXPOSICAO_OFF_BALANCE MOEDA DATA_ULT_PAG	DATA_PROX_PAG EXPOSICAO_ON_BALANCE Stage
					MONTANTE_CAPITAL MONTANTE_JURO CAPITAL_VINCENDO JURO_VINCENDO JURO_VENCIDO FLG_RAISIN CAPITAL_VENCIDO
					FLG_DP_RENOVAVEL FLG_DP_MOBILIZAVEL FLG_TRANSACIONAL FLG_SME FLG_PENALIZACAO NIVEL_FAIR_VALUE);

	SET &CEDIDO.(RENAME=(DIVISA_VENDA=MOEDA DATA_VENCIMENTO=DATA_FIM DATA_ULTIMO_PAGAMENTO_CUPAO=DATA_ULT_PAG
						EXPOSICAO=EXPOSICAO_ON_BALANCE TIPO_TX_JURO=TIPO_TAXA DATA_PROX_PAGAMENTO_CUPAO=DATA_PROX_PAG
						DT_REFERENCIA=DATA_REF ID_OPERACAO=ID_OPERACAO_I TAXA_JURO_CONTRATUAL=TAXA_JURO_CONTRATUAL_I
						CUR_VAL_VEND=MONTANTE_CAPITAL CUR_VAL_JURO=MONTANTE_JURO));
						/*SALDO=EXPOSICAO_OFF_BALANCE));*/	
		IF (TIPO_TAXA="Fixa") OR (TIPO_TAXA="Fixo")then TIPO_TAXA="F";
		IF TIPO_TAXA="Variável" then TIPO_TAXA="V";
		
		ID_OPERACAO=strip(ID_OPERACAO_I);
		EXPOSICAO_OFF_BALANCE=0;
		TAXA_JURO=TAXA_JURO_CONTRATUAL_I/100;
		DURATION=intck('day', DATA_REF, DATA_FIM)/365;
		CAPITAL_VENCIDO=0;
		CAPITAL_VINCENDO=MONTANTE_CAPITAL;
		JURO_VENCIDO=0;
		JURO_VINCENDO=MONTANTE_JURO-JURO_VENCIDO;
		FLG_RAISIN='0';
		MONTANTE_NOMINAL=0;
		FLG_DP_RENOVAVEL='0';
		FLG_DP_MOBILIZAVEL='0';
		FLG_TRANSACIONAL='0';
		FLG_SME='0';
		FLG_PENALIZACAO='0';
		NIVEL_FAIR_VALUE='0';
	RUN;

DATA &T_TOMADAS.(KEEP=DURATION DATA_REF ID_OPERACAO	REF_TIPO_OPERACAO ID_CONTRAPARTE DSC_CONTRAPARTE TIPOLOGIA_OPERACAO	
					CLASSE_ENTIDADE	TAXA_JURO DATA_INICIO DATA_FIM MATURIDADE_RESIDUAL TIPO_TAXA PAIS
					MOEDA EXPOSICAO_OFF_BALANCE	DATA_ULT_PAG DATA_PROX_PAG	EXPOSICAO_ON_BALANCE Stage MONTANTE_NOMINAL
						MONTANTE_CAPITAL MONTANTE_JURO CAPITAL_VINCENDO JURO_VENCIDO JURO_VINCENDO PATRIMONIAL 
					FREQUENCIA_PAGAMENTO FLG_RAISIN FLG_DP_RENOVAVEL FLG_DP_MOBILIZAVEL FLG_TRANSACIONAL
					FLG_SME FLG_PENALIZACAO NIVEL_FAIR_VALUE CAPITAL_VENCIDO);
					
	LENGTH FREQUENCIA_PAGAMENTO $32;
	SET &TOMADO.(RENAME=(DIVISA_COMPRA=MOEDA DATA_VENCIMENTO=DATA_FIM DATA_ULTIMO_PAGAMENTO_CUPAO=DATA_ULT_PAG
						EXPOSICAO=EXPOSICAO_ON_BALANCE TIPO_TX_JURO=TIPO_TAXA DATA_PROX_PAGAMENTO_CUPAO=DATA_PROX_PAG
						 DT_REFERENCIA=DATA_REF ID_OPERACAO=ID_OPERACAO_I TAXA_JURO_CONTRATUAL=TAXA_JURO_CONTRATUAL_I
							CUR_VAL_COMP=MONTANTE_CAPITAL CUR_VAL_JURO=MONTANTE_JURO FREQUENCIA_PAGAMENTO_CAP=FREQUENCIA_PAGAMENTO));
						/*SALDO=EXPOSICAO_OFF_BALANCE));*/
		IF (TIPO_TAXA="Fixa") OR (TIPO_TAXA="Fixo")then TIPO_TAXA="F";
		IF TIPO_TAXA="Variável" then TIPO_TAXA="V";
		ID_OPERACAO=strip(ID_OPERACAO_I);
		EXPOSICAO_OFF_BALANCE=0;
		TAXA_JURO=TAXA_JURO_CONTRATUAL_I/100;
		DURATION=intck('day', DATA_REF, DATA_FIM)/365;
		CAPITAL_VENCIDO=0;
		CAPITAL_VINCENDO=MONTANTE_CAPITAL;
		JURO_VENCIDO=0;
		MONTANTE_NOMINAL=0;
		JURO_VINCENDO=MONTANTE_JURO-JURO_VENCIDO;
		FLG_RAISIN='0';
		FLG_DP_RENOVAVEL='0';
		FLG_DP_MOBILIZAVEL='0';
		FLG_TRANSACIONAL='0';
		FLG_SME='0';
		FLG_PENALIZACAO='0';
		NIVEL_FAIR_VALUE='0';
	RUN;
%MEND;

%MACRO TabelasMaster(T_CARTAS_CRED, T_CC_CR, T_CREDITO, T_DP_DO, T_OBRIGACOES, CEDENCIAS, TOMADAS,BALANCETE, T_LIVE, SEGMENT_NEG, TABELA_MASTER, T_LIVE_MASTER);
 
DATA &T_CARTAS_CRED.(DROP=PAIS_I);
	LENGTH PAIS $3;
	SET &T_CARTAS_CRED.(rename=(PAIS=PAIS_I));

	SPREAD=.;
	FLG_RAISIN=" ";
	FLG_DP_RENOVAVEL=" ";
	FLG_DP_MOBILIZAVEL=" ";
	SALDO=0;
	DATA_ULTIMO_REPRICING=.;
	DATA_ULT_PAG=.;
	DATA_PROX_PAG=.;
	PERIODO_REVISAO_TAXA="                   ";
	DSC_PRODUTO="                   ";
	RATING="     ";
	NOME_CONTRAPARTE="                                       ";
	FREQUENCIA_PAGAMENTO_JURO="da Conta";
	FIXING=.;
	DATA_CALL_OPTION=.;
	NIVEL_FAIR_VALUE="";
	FLG_SME="";
	FLG_TRANSACIONAL=" ";
	M_CRED=.;
	M_DEB=.;
	PAIS = PUT(PAIS_I, $3.);

RUN;

 
DATA AUX.TABELA_MASTER_1(KEEP=DSC_PRODUTO FLG_SME DURATION CLASSE_ENTIDADE NOME_CONTRAPARTE ID_OPERACAO TIPOLOGIA_OPERACAO DESCONTO 
						TAXA_JURO_EFECTIVA NIVEL_FAIR_VALUE TAXA_JURO DATA_INICIO DATA_FIM MOEDA CCF
						TIPO_TAXA SPREAD MONTANTE_CAPITAL INDEXANTE TIPO_AMORTIZACAO MONTANTE_JURO FLG_RAISIN FLG_TRANSACIONAL FLG_DP_RENOVAVEL RATING FIXING
						FLG_DP_MOBILIZAVEL Stage SALDO DATA_ULTIMO_REPRICING DATA_PROXIMA_REPRICING 
						DATA_ULT_PAG DATA_PROX_PAG DATA_CALL_OPTION FREQUENCIA_PAGAMENTO_JURO FREQUENCIA_PAGAMENTO PERIOD_REVISAO_TAXA EXPOSICAO_ON_BALANCE
						EXPOSICAO_OFF_BALANCE DATA_REF FLG_PENALIZACAO CAPITAL_VINCENDO CAPITAL_VENCIDO JURO_VINCENDO
						JURO_VENCIDO M_DEB M_CRED MONTANTE_NOMINAL PAIS);
	LENGTH FLG_RAISIN $3 FLG_DP_RENOVAVEL $3 FLG_DP_MOBILIZAVEL $3 SALDO 8 DATA_ULTIMO_REPRICING 8 DATA_ULT_PAG 8
			DATA_PROX_PAG 8 PERIODO_REVISAO_TAXA $32 DSC_PRODUTO $32 RATING $32 NOME_CONTRAPARTE $32 CAPITAL_VENCIDO 8 
			FIXING 8 DATA_CALL_OPTION 8 NIVEL_FAIR_VALUE $3 FLG_SME $3 SPREAD 8 DURATION 8 M_DEB 8 M_CRED 8 PAIS $3
			ID_OPERACAO $200 TIPOLOGIA_OPERACAO $32 TAXA_JURO_EFECTIVA 8 TAXA_JURO 8 INDEXANTE $32 TIPO_AMORTIZACAO $32
			FREQUENCIA_PAGAMENTO_JURO $32 FREQUENCIA_PAGAMENTO $32 PERIOD_REVISAO_TAXA $32 MONTANTE_NOMINAL 8;
	SET &T_CARTAS_CRED. &T_CC_CR. &T_CREDITO. &T_DP_DO. &T_OBRIGACOES. &CEDENCIAS. &TOMADAS. &BALANCETE.;
	LENGTH FLG_RAISIN $3 FLG_DP_RENOVAVEL $3 FLG_DP_MOBILIZAVEL $3 SALDO 8 DATA_ULTIMO_REPRICING 8 DATA_ULT_PAG 8
			DATA_PROX_PAG 8 PERIODO_REVISAO_TAXA $32 DSC_PRODUTO $32 RATING $32 NOME_CONTRAPARTE $32 CAPITAL_VENCIDO 8 
			FIXING 8 DATA_CALL_OPTION 8 NIVEL_FAIR_VALUE $3 FLG_SME $3 SPREAD 8 DURATION 8 M_DEB 8 M_CRED 8 PAIS $3
			ID_OPERACAO $200 TIPOLOGIA_OPERACAO $32 TAXA_JURO_EFECTIVA 8 TAXA_JURO 8 INDEXANTE $32 TIPO_AMORTIZACAO $32
			FREQUENCIA_PAGAMENTO_JURO $32 FREQUENCIA_PAGAMENTO $32 PERIOD_REVISAO_TAXA $32 MONTANTE_NOMINAL 8;
	
	FORMAT TIPOLOGIA_OPERACAO $20.;
	WHERE MOEDA="EUR" OR MOEDA="USD";
	IF TIPO_TAXA='' THEN TIPO_TAXA='F';
	IF FREQUENCIA_PAGAMENTO='NULL' THEN FREQUENCIA_PAGAMENTO='da Conta';
	IF (FREQUENCIA_PAGAMENTO='') AND (TIPOLOGIA_OPERACAO='CREDITO') 
		THEN FREQUENCIA_PAGAMENTO=FREQUENCIA_PAGAMENTO_JURO;
	RUN;
 
PROC SQL;
	CREATE TABLE AUX.TABELA_MASTER_2 AS
	SELECT *
	,CASE WHEN INDEX(TIPOLOGIA_OPERACAO, 'DO')=1 OR 
				INDEX(TIPOLOGIA_OPERACAO, 'DP')=1 OR 
				INDEX(TIPOLOGIA_OPERACAO, 'TOMADO')=1 THEN 'PASSIVO'
			ELSE 'ATIVO'
			END AS TIPO_CARTEIRA
	,"Baseline" AS CENARIO
	FROM AUX.TABELA_MASTER_1;
	QUIT;

PROC SQL;
	CREATE TABLE AUX.TABELA_MASTER_3 AS	
		SELECT DO.*
		,DO.SPREAD/100 AS SPREAD_1
		,S.Tipo_de_Cliente
		,S.Flag_Financial	
		,TAXA_JURO AS TX_JURO
		,TAXA_JURO_EFECTIVA
	FROM AUX.TABELA_MASTER_2 DO
	LEFT JOIN &SEGMENT_NEG. S
	ON DO.CLASSE_ENTIDADE=S.Segmento;
	QUIT;

DATA AUX.TABELA_MASTER_4(DROP=TAXA_JURO SPREAD_1);
	SET AUX.TABELA_MASTER_3(RENAME=(Tipo_de_Cliente=TIPO_NEGOCIO SPREAD_1=SPREAD SPREAD=SPREAD_1));
	IF (TIPO_NEGOCIO = '') AND (DSC_PRODUTO = "Grandes Empresas") AND INDEX(CLASSE_ENTIDADE, 'Financial corpo') = 1  THEN DO;
		Flag_Financial = "Y";
		TIPO_NEGOCIO = "Wholesale";
	END;
	
	IF FLG_DP_RENOVAVEL='N' THEN FLG_DP_RENOVAVEL='0';
	IF FLG_DP_MOBILIZAVEL='N' THEN FLG_DP_MOBILIZAVEL='0';
	IF STAGE='N' THEN STAGE='';
	
RUN;

PROC SQL;
	CREATE TABLE AUX.TABELA_MASTER_5 AS
	SELECT *
	,CASE WHEN INDEX(Flag_Financial, 'Y')=1 AND INDEX(TIPO_NEGOCIO, 'Wholesale')=1 THEN "Wholesale Financeiro" 
			WHEN INDEX(Flag_Financial, 'N')=1 AND INDEX(TIPO_NEGOCIO, 'Wholesale')=1 THEN "Wholesale Não Financeiro" 
			WHEN INDEX(TIPO_NEGOCIO, 'Retail')=1 THEN "Retail" 
			WHEN INDEX(FLG_SME, '1')=1 THEN "Retail"
			END AS TIPO_CLIENTE
	,"BASELINE" AS CENARIO
	,INTNX('MONTH', DATA_FIM,0,'END') AS MES_MATURIDADE
	,CASE WHEN CALCULATED MES_MATURIDADE <= INTNX('MONTH', DATA_REF,11,'END') THEN "S"
		ELSE "N"
		END AS NOVA_PROD
	,CASE WHEN TIPOLOGIA_OPERACAO IN ('BALANCETE',
           'CAIXA',
           'DO',
           'DISPONIBILIDADES IC'
           ) THEN "N"
		ELSE "S"
		END AS ELEG_NII

	FROM AUX.TABELA_MASTER_4;
	QUIT;

DATA &TABELA_MASTER.;
	RETAIN ID_OPERACAO DESCONTO NOME_CONTRAPARTE DATA_REF DATA_INICIO DATA_FIM MOEDA TIPOLOGIA_OPERACAO
		DSC_PRODUTO CLASSE_ENTIDADE TIPO_CARTEIRA EXPOSICAO_ON_BALANCE EXPOSICAO_OFF_BALANCE 
		EXTRAPATRIMONIAL PATRIMONIAL CAPITAL_VINCENDO CAPITAL_VENCIDO JURO_VINCENDO JURO_VENCIDO MONTANTE_CAPITAL MONTANTE_JURO TX_JURO TAXA_JURO_EFECTIVA
		TIPO_TAXA SPREAD INDEXANTE FLG_RAISIN FLG_DP_RENOVAVEL FLG_DP_MOBILIZAVEL FLG_TRANSACIONAL
		DATA_ULTIMO_REPRICING DATA_PROXIMA_REPRICING DATA_ULT_PAG DATA_PROX_PAG DATA_CALL_OPTION
		PERIOD_REVISAO_TAXA FREQUENCIA_PAGAMENTO FREQUENCIA_PAGAMENTO_JURO TIPO_AMORTIZACAO STAGE FIXING DURATION RATING CENARIO TIPO_NEGOCIO
		FLG_SME FLAG_FINANCIAL FLG_PENALIZACAO TIPO_CLIENTE NIVEL_FAIR_VALUE M_CRED M_DEB CCF ELEG_NII NOVA_PROD 
		MONTANTE_NOMINAL PAIS;

	SET AUX.TABELA_MASTER_5;
	RUN;


%MEND;


%MACRO CORRECOES_MANUAIS_MASTER(TABELA_MASTER, TABELA_ERROS, TABELA_MASTER_FINAL);

/*O objetivo da errata é corrigir temas identificados nas validações de dados que não são posssíveis corrigir antes da data de reporte
sendo necessário preencher sempre a coluna do ID_OPERACAO. 
(exemplo uma operacao esta classificada com taxa de juro fixa mas na verdade a taxa e variavel na errata poderemos corrigir a informacao)
Substituicao de informacao em colunas especificas e realizado atraves de inputs manuais definidos do periodo de producao da solucao*/

/*Altera a formatação do ID que se encontra em numero para caracter*/
DATA AUX.TABELA_ERROS(DROP=ID_OPERACAO_A MONTANTE_CAPITAL_I ID_INDEXANTE);
SET &TABELA_ERROS.(RENAME=(ID_OPERACAO=ID_OPERACAO_A MONTANTE_CAPITAL=MONTANTE_CAPITAL_I
					CAPITAL_VENCIDO=CAPITAL_VENCIDO_I CAPITAL_VINCENDO=CAPITAL_VINCENDO_I
					JURO_VINCENDO=JURO_VINCENDO_I JURO_VENCIDO=JURO_VENCIDO_I 
					MONTANTE_JURO=MONTANTE_JURO_I ));
	ID_OPERACAO=left(ID_OPERACAO_A);
	IF TIPO_TAXA="Taxa Fixa" OR TIPO_TAXA="Taxa Fixo" THEN
			TIPO_TAXA="F";
	IF TIPO_TAXA="Taxa Variável" OR TIPO_TAXA="Variável" OR TIPO_TAXA="Variavel" THEN
			TIPO_TAXA="V";
	IF (TIPOLOGIA_OPERACAO='CREDITO' OR  TIPOLOGIA_OPERACAO='CC' OR TIPOLOGIA_OPERACAO='CR') THEN DO;
		MONTANTE_CAPITAL=MONTANTE_CAPITAL_I*(-1);
		CAPITAL_VENCIDO=CAPITAL_VENCIDO_I*(-1);
		CAPITAL_VINCENDO=CAPITAL_VINCENDO_I*(-1);
		JURO_VINCENDO=JURO_VINCENDO_I*(-1);
		MONTANTE_JURO=MONTANTE_JURO_I*(-1);
		JURO_VENCIDO=JURO_VENCIDO_I*(-1);
		END;
		ELSE DO;
		MONTANTE_CAPITAL=MONTANTE_CAPITAL_I;
		CAPITAL_VENCIDO=CAPITAL_VENCIDO_I;
		CAPITAL_VINCENDO=CAPITAL_VINCENDO_I;
		JURO_VINCENDO=JURO_VINCENDO_I;
		MONTANTE_JURO=MONTANTE_JURO_I;
		JURO_VENCIDO=JURO_VENCIDO_I;
		END;

RUN;

/*Guardar uma copia da tabela master*/
DATA AUX.TABELA_MASTER_CORR(DROP=TIPO_CLIENTE_I ID_INDEXANTE);
	LENGTH TIPO_CLIENTE $32;
	SET &TABELA_MASTER.(RENAME=(TIPO_CLIENTE=TIPO_CLIENTE_I));
	FORMAT DATA_PROXIMA_REPRICING date9.;	
	IF ((TIPO_CLIENTE_I='Retail') AND (FLG_TRANSACIONAL='1')) THEN TIPO_CLIENTE="Retail Transacional";
		ELSE IF ((TIPO_CLIENTE_I='Retail') AND (FLG_TRANSACIONAL='0')) THEN TIPO_CLIENTE="Retail Não Transacional";
		ELSE TIPO_CLIENTE=TIPO_CLIENTE_I;
RUN;
/*Verificar se as colunas numericas estão vazias*/
data non_empty_numeric;
    set AUX.TABELA_ERROS;
    array nums _numeric_;
    keep varname;
    do i = 1 to dim(nums);
        if not missing(nums[i]) then do;
            varname = vname(nums[i]);
            output;
        end;
    end;
run;

proc sort data=non_empty_numeric nodupkey;
    by varname;
run;


/* Step 2.1: Cria uma dataset temporária com valores não faltantes de variáveis caractere */
data char_values;
    set AUX.TABELA_ERROS;
    array char_vars _character_;
    length varname $32;
    retain seen_vars;

    /* Loop através das variáveis caractere */
    do i = 1 to dim(char_vars);
        if not missing(char_vars[i]) then do;
            varname = vname(char_vars[i]);
            if indexw(seen_vars, varname) = 0 then do;
                seen_vars = catx(' ', seen_vars, varname);
                output;
            end;
        end;
    end;

    keep varname;
run;

/* Step 2.2: Remove duplicatas para manter apenas nomes de variáveis */
proc sort data=char_values nodupkey;
    by varname;
run;

data non_empty_character;
    set char_values;
    keep varname;
run;

data non_empty_columns;
    set non_empty_numeric non_empty_character;
run;

proc sql noprint;
    select varname into :non_empty_columns separated by ' '
    from non_empty_columns;
quit;

data AUX.TABELA_ERROS_C;
    set AUX.TABELA_ERROS(keep=&non_empty_columns.);
run;

PROC SQL;
	CREATE TABLE AUX.TABELA_ERROS_COMPL AS
	SELECT 
	E.*
	,M.*
	FROM AUX.TABELA_ERROS_C E
	LEFT JOIN AUX.TABELA_MASTER_CORR M
	ON E.ID_OPERACAO=M.ID_OPERACAO AND E.TIPOLOGIA_OPERACAO=M.TIPOLOGIA_OPERACAO;
	QUIT;


PROC SQL;
	CREATE TABLE AUX.MASTER_AUX AS
	SELECT
		M.*
		,E.ID_OPERACAO AS ID_OPERACAO_E
	FROM AUX.TABELA_MASTER_CORR M
	LEFT JOIN AUX.TABELA_ERROS_C E
	ON E.ID_OPERACAO=M.ID_OPERACAO AND E.TIPOLOGIA_OPERACAO=M.TIPOLOGIA_OPERACAO
	WHERE ID_OPERACAO_E IS MISSING;
	QUIT;

DATA AUX.TABELAS_MASTER_CORRECOES;
	SET AUX.MASTER_AUX AUX.TABELA_ERROS_COMPL;
	RUN;

PROC SQL;
    CREATE TABLE AUX.TABELAS_MASTER_CORRECOES_1 AS
    SELECT *,
        CASE 
            WHEN INDEX(TIPOLOGIA_OPERACAO, 'CEDIDO')=1 
                OR (CLASSE_ENTIDADE LIKE '%Credit Institutions%' AND TIPOLOGIA_OPERACAO = 'CREDITO') 
                THEN "APLICACOES OIC"
                
            WHEN CLASSE_ENTIDADE ^= 'Credit Institutions' 
                AND TIPOLOGIA_OPERACAO IN ('CC', 'CR', 'CREDITO') 
                THEN "CREDITO"
                
            WHEN INDEX(TIPOLOGIA_OPERACAO, 'CARTAS_CRED')=1 
                AND DESCONTO NE '' 
                THEN "DESCONTOS CD"
                
            WHEN INDEX(TIPOLOGIA_OPERACAO, 'OBRIGACOES')=1 
                THEN "TITULOS DIVIDA"
                
            WHEN (INDEX(TIPOLOGIA_OPERACAO, 'TOMADO')=1) 
                OR (INDEX(TIPOLOGIA_OPERACAO, 'DP')=1 AND CLASSE_ENTIDADE LIKE 'Credit Inst%') 
                OR (INDEX(TIPOLOGIA_OPERACAO, 'DO')=1 AND CLASSE_ENTIDADE LIKE 'Credit Inst%') 
                THEN "RECURSOS OIC"
                
            WHEN (INDEX(TIPOLOGIA_OPERACAO, 'DP')=1 AND CLASSE_ENTIDADE NOT LIKE 'Credit Inst%') 
                OR (INDEX(TIPOLOGIA_OPERACAO, 'DO')=1 AND CLASSE_ENTIDADE NOT LIKE 'Credit Inst%') 
                THEN "RECURSOS CLIENTES"
                
            WHEN INDEX(ID_OPERACAO, '11')=1 THEN "DISPONIBILIDADES IC"
            WHEN INDEX(ID_OPERACAO, '10')=1 THEN "CAIXA"
        END AS RUBRICA,

        CASE 
            WHEN INDEXANTE="3M Term SOFR" THEN "SOFR_3M"
            WHEN INDEXANTE="SOFR T 03M" THEN "SOFR_3M" 
            WHEN INDEXANTE="Sofr 3M" THEN "SOFR_3M"
            WHEN INDEXANTE="Daily  SOFR" THEN "SOFR_0M"
            WHEN INDEXANTE="EURIBOR1M" THEN "EURIBOR_1M"
            WHEN INDEXANTE="EURIBOR1Y" THEN "EURIBOR_12M"
            WHEN INDEXANTE="EURIBOR3M" THEN "EURIBOR_3M"
            WHEN INDEXANTE="EURIBOR6M" THEN "EURIBOR_6M"
            WHEN INDEXANTE="LIBUSD1Y" THEN "LIBOR_12M"
            WHEN INDEXANTE="L3MD" THEN "LIBOR_3M"
            WHEN INDEXANTE="L6MD" THEN "LIBOR_6M"
            WHEN INDEXANTE="LIBUSD01" THEN "LIBOR_1M"
            WHEN INDEXANTE="LIBUSD03" THEN "LIBOR_3M"
            WHEN INDEXANTE="LIBUSD06" THEN "LIBOR_6M"
            WHEN INDEXANTE="CSUSD" THEN "SOFR_3M"
            WHEN INDEXANTE="ROND" THEN "SOFR_0M"
            WHEN INDEXANTE="Euribor 12M" THEN "EURIBOR_12M"
            WHEN INDEXANTE="Daily Compounded SOFR" THEN "SOFR_0M"
            WHEN INDEXANTE="Sofr 1M" THEN "SOFR_0M"
            WHEN INDEXANTE="Euribor 6M" THEN "EURIBOR_6M"
            WHEN INDEXANTE="Sofr 6M" THEN "EURIBOR_12M"
            WHEN INDEXANTE="TERM Sofr 1M" THEN "SOFR_0M"
            WHEN INDEXANTE="CFEEURTV" THEN "EURIBOR_6M"
            WHEN INDEXANTE="CFEUSDTV" THEN "LIBOR_6M"
            WHEN INDEXANTE="TFX_70_GEN" THEN ""
            WHEN INDEXANTE="SOFR T 01M" THEN "SOFR_0M"
            WHEN INDEXANTE="SOFR T 12M" THEN "EURIBOR_12M"
            WHEN INDEXANTE="K_EURIB03M" THEN "EURIBOR_3M"
            WHEN INDEXANTE="K_LIUSD01M" THEN "LIBOR_1M"
            WHEN INDEXANTE="K_EURIB01M" THEN "EURIBOR_1M"
            WHEN INDEXANTE="LIBUSD01" THEN "LIBOR_12M"
        END AS ID_INDEXANTE_F
    FROM AUX.TABELAS_MASTER_CORRECOES;
QUIT;


/*Rever indexantes adicionados pela FGR (2a metade dos WHEN INDEXANTE)*/

DATA AUX.TABELAS_MASTER_CORRECOES_2(DROP=ID_OPERACAO_I ID_INDEXANTE);
	SET AUX.TABELAS_MASTER_CORRECOES_1(RENAME=(ID_OPERACAO=ID_OPERACAO_I));
	IF TIPOLOGIA_OPERACAO="BALANCETE" THEN TIPOLOGIA_OPERACAO=RUBRICA;
		ELSE TIPOLOGIA_OPERACAO=TIPOLOGIA_OPERACAO;
	IF TIPOLOGIA_OPERACAO="CARTAS_CRED" THEN ID_OPERACAO=CATT(ID_OPERACAO_I,DESCONTO);
		ELSE ID_OPERACAO=ID_OPERACAO_I;

		RUN;

DATA &TABELA_MASTER_FINAL.(KEEP=ID_OPERACAO DESCONTO NOME_CONTRAPARTE DATA_REF DATA_INICIO DATA_FIM MOEDA TIPOLOGIA_OPERACAO
		DSC_PRODUTO CLASSE_ENTIDADE TIPO_CARTEIRA RUBRICA EXPOSICAO_ON_BALANCE EXPOSICAO_OFF_BALANCE PAIS
		CAPITAL_VINCENDO CAPITAL_VENCIDO JURO_VINCENDO JURO_VENCIDO MONTANTE_CAPITAL MONTANTE_JURO TX_JURO TAXA_JURO_EFECTIVA
		TIPO_TAXA SPREAD ID_INDEXANTE FLG_RAISIN FLG_DP_RENOVAVEL FLG_DP_MOBILIZAVEL FLG_TRANSACIONAL MONTANTE_NOMINAL
		DATA_ULTIMO_REPRICING DATA_PROXIMA_REPRICING DATA_ULT_PAG DATA_PROX_PAG DATA_CALL_OPTION FREQUENCIA_PAGAMENTO FREQUENCIA_PAGAMENTO_JURO
		PERIOD_REVISAO_TAXA FREQUENCIA_PAGAMENTO TIPO_AMORTIZACAO STAGE FIXING DURATION RATING CENARIO TIPO_NEGOCIO
		FLG_SME FLAG_FINANCIAL FLG_PENALIZACAO TIPO_CLIENTE NIVEL_FAIR_VALUE M_DEB M_CRED CCF ELEG_NII NOVA_PROD);
	RETAIN  ID_OPERACAO DESCONTO NOME_CONTRAPARTE DATA_REF DATA_INICIO DATA_FIM MOEDA TIPOLOGIA_OPERACAO
		DSC_PRODUTO CLASSE_ENTIDADE TIPO_CARTEIRA RUBRICA EXPOSICAO_ON_BALANCE EXPOSICAO_OFF_BALANCE
		CAPITAL_VINCENDO CAPITAL_VENCIDO JURO_VINCENDO JURO_VENCIDO MONTANTE_CAPITAL MONTANTE_JURO TX_JURO TAXA_JURO_EFECTIVA
		TIPO_TAXA SPREAD ID_INDEXANTE FLG_RAISIN FLG_DP_RENOVAVEL FLG_DP_MOBILIZAVEL FLG_TRANSACIONAL
		DATA_ULTIMO_REPRICING DATA_PROXIMA_REPRICING DATA_ULT_PAG DATA_PROX_PAG DATA_CALL_OPTION FREQUENCIA_PAGAMENTO FREQUENCIA_PAGAMENTO_JURO
		PERIOD_REVISAO_TAXA FREQUENCIA_PAGAMENTO TIPO_AMORTIZACAO STAGE FIXING DURATION RATING CENARIO TIPO_NEGOCIO
		FLG_SME FLAG_FINANCIAL FLG_PENALIZACAO TIPO_CLIENTE NIVEL_FAIR_VALUE M_DEB M_CRED CCF ELEG_NII NOVA_PROD
		MONTANTE_NOMINAL PAIS;

	SET AUX.TABELAS_MASTER_CORRECOES_2(RENAME=(ID_INDEXANTE_F=ID_INDEXANTE));
	IF TIPOLOGIA_OPERACAO="DP" AND CAPITAL_VINCENDO=. THEN CAPITAL_VINCENDO=MONTANTE_CAPITAL;
			ELSE CAPITAL_VINCENDO=CAPITAL_VINCENDO;


	RUN;

%MEND;


