%MACRO ProjecoesLiveTfixa(LIVE_MASTER, BUCKET, PROJECAO_FIXA, PROJECAO_FIXA_OUT, PROJECAO_FIXA_OUT_G);
/*A pedido do cliente foi realizado um forcing para assumir maturidade residual igual a 1 dia
sempre que esta fosse negativa para evitar perder os papeis comerciais que se encontram em sistema apesar
de estarem desativados. Isto porque o montante continua a aparecer na contabilidade*/

DATA &PROJECAO_FIXA.(KEEP=TIPO_CARTEIRA TIPO_CLIENTE DATA_REF ID_OPERACAO TIPOLOGIA_OPERACAO 
						Stage DATA_INICIO DATA_FIM DATA_ULTIMO_REPRICING 
						DATA_PROXIMA_REPRICING PERIOD_REVISAO_TAXA CENARIO
						DATA_PROX_PAG DATA_ULT_PAG FREQUENCIA_PAGAMENTO
						MOEDA TIPO_TAXA TX_JURO EXPOSICAO_ON_BALANCE MATURIDADE_RESIDUAL
						N_Capital_Payment N_Interest_Payment N_Cash_Flow_Payment
						D_PaymentDate);
	SET &LIVE_MASTER.;
	WHERE TIPO_TAXA="F" AND ID_EconScenario=1;
	MATURIDADE_RESIDUAL=intck('day', DATA_REF, DATA_FIM);
	IF MATURIDADE_RESIDUAL<=0 THEN MATURIDADE_RESIDUAL=1;
	RUN;


PROC SQL;
	CREATE TABLE AUX.AUX_PROJECAO_FIXA AS
		SELECT A.*
		,B.Categoria as BUCKET

		FROM &PROJECAO_FIXA. AS A
		LEFT JOIN &BUCKET. AS B
		ON A.D_PaymentDate BETWEEN B.Inicio AND B.Fim;
	QUIT;


PROC SQL;
    CREATE TABLE &PROJECAO_FIXA_OUT. AS
    SELECT DISTINCT
         CENARIO
        ,TIPOLOGIA_OPERACAO
		,TIPO_CLIENTE
        ,MOEDA
        ,TIPO_CARTEIRA
		,TIPO_TAXA
        ,BUCKET
        ,(SUM(N_Capital_Payment)) FORMAT=COMMA12.2 AS Capital_Payment
        ,(SUM(N_Interest_Payment)) FORMAT=COMMA12.2 AS Interest_Payment
        ,(SUM(N_Cash_Flow_Payment)) FORMAT=COMMA12.2 AS Cash_Flow_Payment
    FROM AUX.AUX_PROJECAO_FIXA
    GROUP BY TIPOLOGIA_OPERACAO, BUCKET, MOEDA, TIPO_CLIENTE, TIPO_CARTEIRA, CENARIO, TIPO_TAXA;
QUIT;

PROC SORT DATA=&PROJECAO_FIXA_OUT. OUT=&PROJECAO_FIXA_OUT_G.;
    BY CENARIO TIPOLOGIA_OPERACAO TIPO_CLIENTE MOEDA TIPO_CARTEIRA TIPO_TAXA BUCKET;
RUN;

proc transpose data=&PROJECAO_FIXA_OUT_G. out=&PROJECAO_FIXA_OUT_G.;
    by TIPOLOGIA_OPERACAO CENARIO TIPO_CLIENTE TIPO_CARTEIRA MOEDA TIPO_TAXA;
    id BUCKET;
    var Cash_Flow_Payment;
run;

DATA &PROJECAO_FIXA_OUT_G.;
	RETAIN TIPOLOGIA_OPERACAO CENARIO TIPO_CLIENTE TIPO_CARTEIRA MOEDA TIPO_TAXA _NAME_	
		'Overnight'n 'Greater than 1 month up to 3 mon'n 'Greater than 3 months up to 6 mo'n
		'Greater than 6 months up to 9 mo'n	'Greater than 9 months up to 12 m'n 'Greater than 12 months up to 1.5'n
		'Greater than 1.5 years up to 2 y'n 'Greater than 2 years up to 3 yea'n 'Greater than 3 years up to 4 yea'n
		'Greater than 4 years up to 5 yea'n	'Greater than 5 years up to 6 yea'n 'Greater than 6 years up to 7 yea'n
		'Greater than 7 years up to 8 yea'n 'Greater than 8 years up to 9 yea'n 'Greater than 9 years up to 10 ye'n
		'Greater than 10 years up to 15 y'n;
	SET &PROJECAO_FIXA_OUT_G.;
	RUN;

%MEND;

%MACRO ProjecaoNMDs(MASTER, BUCKETS, PROJECAO_DO, PROJECAO_DO_OUT);

DATA AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE;
	LENGTH CURVA $10 CENARIO $32;
	SET &MASTER.(DROP=CENARIO);

	WHERE TIPOLOGIA_OPERACAO="DO";
		CENARIO="BASELINE";
		CURVA="BASELINE";
	RUN;

DATA AUX.PROJECOES_PARALLEL_UP;
	LENGTH CURVA $10 CENARIO $32;
	SET AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE(DROP=CENARIO);
		CENARIO="PARALLEL_UP";
		CURVA="Aumento ST";
		RUN;

DATA AUX.PROJECOES_PARALLEL_DOWN;
	LENGTH CURVA $10 CENARIO $32;
	SET AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE(DROP=CENARIO);
		CENARIO="PARALLEL_DOWN";
		CURVA="Redução ST";
		RUN;

DATA AUX.PROJECOES_SHORT_RATE_UP;
	LENGTH CURVA $10 CENARIO $32;
	SET AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE(DROP=CENARIO);
		CENARIO="SHORT_RATE_UP";
		CURVA="Aumento ST";
		RUN;

DATA AUX.PROJECOES_SHORT_RATE_DOWN;
	LENGTH CURVA $10 CENARIO $32;
	SET AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE(DROP=CENARIO);
		CENARIO="SHORT_RATE_DOWN";
		CURVA="Redução ST";
		RUN;

DATA AUX.PROJECOES_STEEPENER;
	SET AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE(DROP=CENARIO);
		CENARIO="STEEPENER";
		CURVA="Redução ST";
		RUN;

DATA AUX.PROJECOES_FLATTENER;
	LENGTH CURVA $10 CENARIO $32;
	SET AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE(DROP=CENARIO);
		CENARIO="FLATTENER";
		CURVA="Aumento ST";
		RUN;

DATA AUX.CONCAT_TODOS_CENARIOS_NMD;
	LENGTH CURVA $10 CENARIO $32;
	SET AUX.PROJECOES_SHORT_RATE_DOWN AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE AUX.PROJECOES_FLATTENER 
		AUX.PROJECOES_SHORT_RATE_UP AUX.PROJECOES_STEEPENER
		AUX.PROJECOES_PARALLEL_DOWN AUX.PROJECOES_PARALLEL_UP;
		RUN;	

PROC SQL;
	CREATE TABLE WORK.PROJECAO_DO_TIPOLOGIA_CLIENTE_1 AS 
		SELECT D.*
		,B.Categoria AS BUCKET
		,B.Percentagem AS ALOCACAO
		,B.Midpoint_Date AS DATA_PROJ
		FROM AUX.CONCAT_TODOS_CENARIOS_NMD D
		LEFT JOIN &BUCKETS. B
		ON D.TIPO_CLIENTE=B.Tipo_de_Cliente AND D.CURVA=B.Cen_rio;
		QUIT;

DATA AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE_2(KEEP=DATA_PROJ CENARIO TIPO_CLIENTE CLASSE_ENTIDADE DATA_REF TIPOLOGIA_OPERACAO MOEDA N_Cash_Flow_Payment BUCKET TIPO_CARTEIRA TIPO_TAXA);
	SET WORK.PROJECAO_DO_TIPOLOGIA_CLIENTE_1;
	WHERE MOEDA="EUR" OR MOEDA="USD";
	N_Cash_Flow_Payment=MONTANTE_CAPITAL*ALOCACAO;
	FORMAT DATA_PROJ DATE9.;
	RUN;
	
PROC SQL;
    CREATE TABLE &PROJECAO_DO. AS
    SELECT
        CENARIO
        ,TIPOLOGIA_OPERACAO
		,TIPO_CLIENTE
        ,MOEDA
        ,TIPO_CARTEIRA
		,TIPO_TAXA
        ,SUM(N_Cash_Flow_Payment) AS N_Cash_Flow_Payment
        ,BUCKET
    FROM AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE_2
    GROUP BY TIPOLOGIA_OPERACAO, TIPO_CLIENTE, BUCKET, MOEDA, TIPO_CARTEIRA, TIPO_TAXA, CENARIO;
QUIT;


PROC SORT DATA=&PROJECAO_DO. OUT=&PROJECAO_DO_OUT.;
    BY TIPOLOGIA_OPERACAO CENARIO TIPO_CLIENTE TIPO_CARTEIRA MOEDA TIPO_TAXA;
RUN;

PROC TRANSPOSE DATA=&PROJECAO_DO_OUT. OUT=&PROJECAO_DO_OUT.;
    BY TIPOLOGIA_OPERACAO CENARIO TIPO_CLIENTE TIPO_CARTEIRA MOEDA TIPO_TAXA;
    ID BUCKET;
    VAR N_Cash_Flow_Payment;
RUN;


%MEND;

%MACRO CalculoProj(TABELA_MASTER, CURVAS_INDEXANTES, OPERACOES_PL_F, TABELA_OUT);

data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run;

PROC SQL;
	CREATE TABLE AUX.AUX_INPUT_PROJ_0 AS 
	SELECT *
		,CASE WHEN DATA_FIM<=DATA_REF THEN INTNX('day', DATA_REF, 1)
			ELSE DATA_FIM
			END AS DATA_FIM_A

		,CASE WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'S')=1 THEN 6
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'Semestral')=1 THEN 6
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'Semestra')=1 THEN 6 
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'Sem')=1 THEN 6 
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'Y')=1 THEN 12
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'Anual')=1 THEN 12
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'M')=1 THEN 1
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'Mensal')=1 THEN 1
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'Men')=1 THEN 1
				WHEN INDEX(COMPRESS(FREQUENCIA_PAGAMENTO_JURO),'daConta')=1 THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				WHEN INDEX(COMPRESS(FREQUENCIA_PAGAMENTO_JURO),'DaConta')=1 THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'da')=1 THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'T')=1 THEN 3
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'Trimestral')=1 THEN 3
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'Trimestr')=1 THEN 3
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'Tri')=1 THEN 3  
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'')=1 THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				WHEN FREQUENCIA_PAGAMENTO_JURO IS MISSING THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				WHEN INDEX(FREQUENCIA_PAGAMENTO_JURO,'NULL')=1 THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				END AS PERIOD_PAG_M_JURO		
		,CASE WHEN INDEX(FREQUENCIA_PAGAMENTO,'S')=1 THEN 6
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'Semestral')=1 THEN 6
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'Semestra')=1 THEN 6 
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'Sem')=1 THEN 6 
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'Y')=1 THEN 12
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'Anual')=1 THEN 12
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'M')=1 THEN 1
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'Mensal')=1 THEN 1
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'Men')=1 THEN 1
				WHEN INDEX(COMPRESS(FREQUENCIA_PAGAMENTO),'daConta')=1 THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				WHEN INDEX(COMPRESS(FREQUENCIA_PAGAMENTO),'DaConta')=1 THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'da')=1 THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'T')=1 THEN 3
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'Trimestral')=1 THEN 3
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'Trimestr')=1 THEN 3
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'Tri')=1 THEN 3  
				WHEN INDEX(FREQUENCIA_PAGAMENTO,'')=1 THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				WHEN FREQUENCIA_PAGAMENTO IS MISSING THEN INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A)
				END AS PERIOD_PAG_M_CAP

		,INTCK('month', DATA_REF, CALCULATED DATA_FIM_A) AS MATURIDADE_RESIDUAL
		,INTCK('month', DATA_INICIO, CALCULATED DATA_FIM_A) AS PRAZO
		,CASE WHEN FREQUENCIA_PAGAMENTO = '' OR FREQUENCIA_PAGAMENTO='NULL' THEN "BULLET" 
			ELSE FREQUENCIA_PAGAMENTO
			END AS TIPO_PAGAMENTO
		,CASE WHEN TIPOLOGIA_OPERACAO NE "CREDITO" AND TIPOLOGIA_OPERACAO NE "DO" AND TIPOLOGIA_OPERACAO NE "CAIXA"
						AND TIPOLOGIA_OPERACAO NE "DISPONIBILIDADES IC"
						THEN "BULLET"
			WHEN TIPOLOGIA_OPERACAO="CREDITO" THEN TIPO_AMORTIZACAO
		END AS TIPO_AMORTIZACAO_F
		,CASE WHEN TIPO_TAXA NOT ='F' THEN SPREAD*(CALCULATED PERIOD_PAG_M_JURO/12)
			WHEN TIPO_TAXA ='F' THEN TX_JURO*(CALCULATED PERIOD_PAG_M_JURO/12)
			END AS TX_J_FIXA_A
		,(CALCULATED TX_J_FIXA_A) /(CALCULATED PERIOD_PAG_M_JURO) AS JURO_NII
		,"Mensal" AS FREQ_JURO_NII
		,1 AS PERIOD_PAG_M_NII
		
	FROM &TABELA_MASTER.;
	QUIT;


data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run;


%MapeamentPeriodMeses(AUX.AUX_INPUT_PROJ_0,PERIOD_REVISAO_TAXA,PERIOD_REV_TX_M, AUX.AUX_CALC_PERIOD_REV);

DATA AUX.AUX_INPUT_PROJ_1(DROP=TIPO_AMORTIZACAO DATA_FIM_L);
	SET AUX.AUX_CALC_PERIOD_REV(RENAME=(DATA_FIM=DATA_FIM_L DATA_FIM_A=DATA_FIM CENARIO=CENARIO_AUX));
	CENARIO="BASELINE";
	IF TIPOLOGIA_OPERACAO IN ("CEDIDO", "TOMADO") THEN
	ID_OPERACAO=CATT(ID_OPERACAO,TIPOLOGIA_OPERACAO);
	IF DATA_PROXIMA_REPRICING=. THEN DATA_PROXIMA_REPRICING=DATA_PROX_PAG;
	IF DATA_PROXIMA_REPRICING<=DATA_REF THEN 
		DATA_PROXIMA_REPRICING=INTNX('MONTH', DATA_PROXIMA_REPRICING, PERIOD_REV_TX_M, 'S');
	DO T_MES=0 TO MATURIDADE_RESIDUAL;
	OUTPUT;
	END;
	FORMAT DATA_FIM DATE9.;
	RUN;

data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run;
/*************************************************************************/



PROC SORT DATA=AUX.AUX_INPUT_PROJ_1 OUT=AUX.AUX_CALC_PERIOD_REV_1;
    BY ID_OPERACAO T_MES;
RUN;

DATA AUX.AUX_INPUT_PROJ_2;
	SET AUX.AUX_CALC_PERIOD_REV_1;
	BY ID_OPERACAO;
	IF T_MES=0 THEN DATA_PROJ=DATA_REF;
		ELSE DATA_PROJ=intnx('MONTH', DATA_REF, T_MES, 'E');	
	FORMAT DATA_PROJ date9.;
	IF DATA_PROJ<DATA_PROX_PAG OR DATA_PROJ<DATA_PROXIMA_REPRICING
		THEN DATA_CURVA=DATA_REF;
		ELSE
			IF TIPOLOGIA_OPERACAO="DP" THEN DATA_CURVA=DATA_PROXIMA_REPRICING;
				ELSE DATA_CURVA=DATA_PROX_PAG;
	IF TIPO_TAXA="V" THEN DO;
		RETAIN DATA_PROXIMA_REPRICING_NII DATA_CURVA_NII;
    	IF FIRST.ID_OPERACAO THEN DO;
        /* Inicializa as variáveis com as primeiras datas */
        	DATA_CURVA_NII = DATA_CURVA;
        	DATA_PROXIMA_REPRICING_NII = DATA_PROXIMA_REPRICING;
    	END;
    	ELSE IF DATA_PROJ<DATA_PROXIMA_REPRICING_NII THEN DO;
			DATA_PROXIMA_REPRICING_NII=DATA_PROXIMA_REPRICING_NII;
			DATA_CURVA_NII=DATA_CURVA_NII;
			END;
		ELSE IF DATA_PROJ>=DATA_PROXIMA_REPRICING_NII AND 
				DATA_PROJ<INTNX('MONTH', DATA_PROXIMA_REPRICING_NII, PERIOD_REV_TX_M, 'E')
				THEN DO;
				DATA_CURVA_NII=DATA_PROXIMA_REPRICING_NII;
				DATA_PROXIMA_REPRICING_NII=INTNX('MONTH', DATA_PROXIMA_REPRICING_NII, PERIOD_REV_TX_M, 'E');
				END;
			
		ELSE DO;
            	/* Mantém os valores de DATA_CURVA_NII e DATA_PROXIMA_REPRICING_NII */
            DATA_CURVA_NII = DATA_CURVA_NII;
            DATA_PROXIMA_REPRICING_NII = DATA_PROXIMA_REPRICING_NII;
    	END;
		FORMAT DATA_PROXIMA_REPRICING_NII DATA_CURVA DATA_CURVA_NII date9.;
	END;
	RUN;


data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run; 

%AlocacaoTaxaCenario(AUX.AUX_INPUT_PROJ_2, work.PROJ_JUNCAO_CURVAS_0, AUX.TABELA_CURVAS_INDEXANTE)

data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run;

PROC SQL;
	CREATE TABLE WORK.PROJ_JUNCAO_CURVAS AS
		SELECT 
		PRJ.*
		,CURV.CURVA AS BASELINE_NII
        ,CURV.PARALLEL_UP AS PARALLEL_UP_NII 
        ,CURV.PARALLEL_DOWN AS PARALLEL_DOWN_NII 
        ,CURV.SHORT_RATE_UP AS SHORT_RATE_UP_NII 
        ,CURV.SHORT_RATE_DOWN AS SHORT_RATE_DOWN_NII   
        ,CURV.STEEPENER AS STEEPENER_NII     
        ,CURV.FLATTENER AS FLATTENER_NII         
		FROM work.PROJ_JUNCAO_CURVAS_0  PRJ
		LEFT JOIN  AUX.TABELA_CURVAS_INDEXANTE CURV
		ON PRJ.DATA_CURVA_NII=CURV.DATAS AND PRJ.ID_INDEXANTE=CURV.ID_INDEXANTE;
		QUIT;

data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run;

PROC SQL;
	CREATE TABLE AUX.PROJ_JUNCAO_CURVAS_I AS
		SELECT 
		PRJ.*
		,CURV.CURVA AS BASELINE_INICIAL        
		FROM WORK.PROJ_JUNCAO_CURVAS  PRJ
		LEFT JOIN  AUX.TABELA_CURVAS_INDEXANTE CURV
		ON PRJ.DATA_REF=CURV.DATAS AND PRJ.ID_INDEXANTE=CURV.ID_INDEXANTE;
		QUIT;

data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run;

PROC SQL;
	CREATE TABLE AUX.PROJ_JUNCAO_CURVAS_A AS
		SELECT
		*
		,CASE WHEN TIPO_TAXA ='V' AND 
					(DATA_PROJ<DATA_PROX_PAG OR DATA_PROJ<DATA_PROXIMA_REPRICING)
							THEN (TX_JURO-SPREAD)*(PERIOD_PAG_M_CAP/12)
		WHEN TIPO_TAXA ='V' AND
					(DATA_PROJ>=DATA_PROX_PAG AND DATA_PROJ>=DATA_PROXIMA_REPRICING)
						 THEN BASELINE_INICIAL*(PERIOD_PAG_M_CAP/12)
		ELSE 0 
		 END AS TX_VARIAVEL_A
		,CASE WHEN TIPO_TAXA ='V' AND 
					(DATA_PROJ<DATA_PROX_PAG OR DATA_PROJ<DATA_PROXIMA_REPRICING)
							THEN (TX_JURO-SPREAD)*(PERIOD_PAG_M_CAP/12)
				WHEN TIPO_TAXA ='V' AND
					(DATA_PROJ>=DATA_PROX_PAG AND DATA_PROJ>=DATA_PROXIMA_REPRICING)
						  THEN BASELINE_INICIAL*(PERIOD_PAG_M_CAP/12)
		ELSE 0 
		 END AS TX_VARIAVEL_A_NII
		,(CALCULATED TX_VARIAVEL_A)+TX_J_FIXA_A AS TX_MOMENTO_INICIAL
		,(CALCULATED TX_VARIAVEL_A_NII)+JURO_NII AS TX_MOMENTO_INICIAL_NII
		,CATX('-', CENARIO, ID_OPERACAO) AS ID_OPERACAO_AUX
		FROM AUX.PROJ_JUNCAO_CURVAS_I
		ORDER BY CENARIO, ID_OPERACAO, T_MES;
QUIT;

data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run;

data _null_;
    if 0 then set &OPERACOES_PL_F. nobs=num_obs;
    call symputx('num_obs', num_obs);
run;

%put Number of Observations: &num_obs;

%if &num_obs > 0 %then %do;

PROC SQL;
	CREATE TABLE AUX.T_PLF_FLG AS
	SELECT
	ID_OPERACAO
	,MAX(FLG_PLF) AS FLG_PLF
	FROM &OPERACOES_PL_F.
	GROUP BY ID_OPERACAO;
	RUN;

PROC SQL;
	CREATE TABLE work.PROJ_JUNCAO_PLF_1 AS
	SELECT
	ORIG.*
	,PLF.FLG_PLF
	FROM AUX.PROJ_JUNCAO_CURVAS_A ORIG
	LEFT JOIN AUX.T_PLF_FLG PLF 
	ON ORIG.ID_OPERACAO=PLF.ID_OPERACAO;
	QUIT;

PROC SQL;
	CREATE TABLE work.PROJ_JUNCAO_PLF_2 AS
	SELECT
	ORIG.*
	,PLF.CF_CAPITAL
	FROM work.PROJ_JUNCAO_PLF_1 ORIG
	LEFT JOIN &OPERACOES_PL_F. PLF
	ON INTNX("MONTH",ORIG.DATA_PROJ,0,"E")=INTNX("MONTH",PLF.DATA_PROJ,0,"E") AND 
			ORIG.ID_OPERACAO=PLF.ID_OPERACAO AND ORIG.FLG_PLF=PLF.FLG_PLF
	ORDER BY CENARIO, ID_OPERACAO, T_MES;
	QUIT;

DATA AUX.PROJ_JUNCAO_CURVAS_A;
	SET work.PROJ_JUNCAO_PLF_2;
	IF FLG_PLF="Y" AND CF_CAPITAL=. THEN CF_CAPITAL=0;
	RUN;

data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run;
%END;


DATA &TABELA_OUT.;
    SET AUX.PROJ_JUNCAO_CURVAS_A(RENAME=(TIPO_AMORTIZACAO_F=TIPO_AMORTIZACAO));
    BY ID_OPERACAO_AUX;
    RETAIN N_PAG 0 CAPITAL_REM 0 CAPITAL_REM_NII 0;

    /* Inicialização de variáveis na primeira ocorrência de ID_OPERACAO */
    IF FIRST.ID_OPERACAO_AUX THEN DO;
        N_PAG = 0;
        IF (TIPOLOGIA_OPERACAO = "BALANCETE" OR TIPOLOGIA_OPERACAO = "CREDITO") THEN DO;
            CAPITAL_REM = CAPITAL_VINCENDO;
			CAPITAL_REM_NII= CAPITAL_VINCENDO;
			END;
        ELSE DO;
            CAPITAL_REM = MONTANTE_CAPITAL;
			CAPITAL_REM_NII = MONTANTE_CAPITAL;
			END;
        CF_CAPITAL = 0;
		CF_CAPITAL_NII=0;
        CF_JURO_SPREAD = 0;
        CF_JURO_VAR = 0;
		CF_JURO_NII_VAR=0;
		CF_JURO_NII=0;
    END;
    ELSE DO;
        /* Cálculo de CF_CAPITAL para amortização */
        IF (MOD(MATURIDADE_RESIDUAL - T_MES, PERIOD_PAG_M_CAP) = 0 AND FLG_PLF NE "Y")THEN DO;
            IF TIPO_AMORTIZACAO = "Amortização Constante" THEN DO;
                CF_CAPITAL = CAPITAL_REM / (CEIL(MATURIDADE_RESIDUAL / PERIOD_PAG_M_CAP) - N_PAG);
                CF_CAPITAL_NII = CAPITAL_REM_NII / (CEIL(MATURIDADE_RESIDUAL / PERIOD_PAG_M_CAP) - N_PAG);
				END;

            ELSE IF TIPO_AMORTIZACAO = "Pagamento Constante" THEN DO;
                CF_CAPITAL = PPMT(TX_MOMENTO_INICIAL, 1, CEIL(MATURIDADE_RESIDUAL / PERIOD_PAG_M_CAP) - N_PAG, CAPITAL_REM);
				CF_CAPITAL_NII=PPMT(TX_MOMENTO_INICIAL,1, CEIL(MATURIDADE_RESIDUAL / PERIOD_PAG_M_CAP) - N_PAG, CAPITAL_REM_NII);
				END;

			ELSE IF (INDEX(TIPO_AMORTIZACAO, "BULLET") > 0) AND (T_MES = MATURIDADE_RESIDUAL) THEN DO;
                CF_CAPITAL = CAPITAL_REM;
				CF_CAPITAL_NII=CAPITAL_REM_NII;
                CF_JURO_VAR = 0;
				CF_JURO_NII_VAR=0;
				CF_JURO_NII=0;
            END;
            ELSE DO; 
                CF_CAPITAL = 0;
                CF_JURO_VAR = 0;
				CF_CAPITAL_NII=0;
				CF_JURO_NII_VAR=0;
				CF_JURO_NII=0;
            END;
            N_PAG = N_PAG + 1;
        END;
		
		ELSE IF FLG_PLF = "Y" THEN DO;
				CF_CAPITAL=CF_CAPITAL;
				CF_CAPITAL_NII=CF_CAPITAL;
				CF_JURO_VAR = 0;
				CF_JURO_NII_VAR=0;
				CF_JURO_NII=0;

			END;
        ELSE DO;
            CF_CAPITAL = 0;
            CF_JURO_VAR = 0;
			CF_CAPITAL_NII=0;
			CF_JURO_NII_VAR=0;
			CF_JURO_NII=0;
        END;
        
        /* Cálculo de CF_JURO_SPREAD e CF_JURO_VAR */
        IF MOD(MATURIDADE_RESIDUAL - T_MES, PERIOD_PAG_M_JURO) = 0 THEN DO;
    		CF_JURO_SPREAD = CAPITAL_REM * TX_J_FIXA_A;

    		IF TIPO_TAXA = 'F' THEN 
        		CF_JURO_VAR = 0;
    		ELSE DO;
        		IF DATA_PROJ < DATA_PROXIMA_REPRICING THEN DO;
            		CF_JURO_VAR = CAPITAL_REM * (TX_JURO - SPREAD) * (PERIOD_PAG_M_JURO / 12);
        		END;

        		ELSE IF DATA_PROJ = DATA_PROXIMA_REPRICING THEN DO;
            		IF CENARIO = "BASELINE" AND (BASELINE+SPREAD > 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * BASELINE * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "PARALLEL_UP" AND (PARALLEL_UP+SPREAD > 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * PARALLEL_UP * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "PARALLEL_DOWN"  AND (PARALLEL_DOWN+SPREAD > 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * PARALLEL_DOWN * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "SHORT_RATE_UP" AND (SHORT_RATE_UP+SPREAD > 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * SHORT_RATE_UP * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "SHORT_RATE_DOWN"  AND (SHORT_RATE_DOWN+SPREAD > 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * SHORT_RATE_DOWN * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "STEEPENER"  AND (STEEPENER+SPREAD > 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * STEEPENER * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "FLATTENER"  AND (FLATTENER+SPREAD > 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * FLATTENER * (PERIOD_PAG_M_JURO / 12);
        		END;

        		ELSE IF DATA_PROJ = DATA_PROXIMA_REPRICING THEN DO;
            		IF CENARIO = "BASELINE" AND (BASELINE+SPREAD <= 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * (-SPREAD) * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "PARALLEL_UP" AND (PARALLEL_UP+SPREAD <= 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * (-SPREAD) * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "PARALLEL_DOWN"  AND (PARALLEL_DOWN+SPREAD <= 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * (-SPREAD) * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "SHORT_RATE_UP" AND (SHORT_RATE_UP+SPREAD <= 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * (-SPREAD) * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "SHORT_RATE_DOWN"  AND (SHORT_RATE_DOWN+SPREAD <= 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * (-SPREAD) * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "STEEPENER"  AND (STEEPENER+SPREAD <= 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * (-SPREAD) * (PERIOD_PAG_M_JURO / 12);
            		ELSE IF CENARIO = "FLATTENER"  AND (FLATTENER+SPREAD <= 0) THEN 
                		CF_JURO_VAR = CAPITAL_REM * (-SPREAD) * (PERIOD_PAG_M_JURO / 12);
        		END;
        		ELSE 
            		CF_JURO_VAR = 0;
    		END;
		END;

        /* Cálculo de CF_JURO_NII e CF_JURO_NII_VAR */
        ELSE IF MOD(MATURIDADE_RESIDUAL - T_MES, PERIOD_PAG_M_NII) = 0 THEN DO;
            CF_JURO_NII = JURO_NII * CAPITAL_REM_NII;
            IF TIPO_TAXA = 'F' THEN 
                CF_JURO_NII_VAR = 0;
            ELSE DO;
				IF DATA_PROJ<DATA_PROXIMA_REPRICING THEN DO;
                    	CF_JURO_NII_VAR = CAPITAL_REM_NII * BASELINE_NII*(PERIOD_PAG_M_NII/12);
					END;
				ELSE DO;
                	IF CENARIO = "BASELINE" THEN 
                    	CF_JURO_NII_VAR = CAPITAL_REM_NII * BASELINE_NII*(PERIOD_PAG_M_NII/12);
                	ELSE IF CENARIO = "PARALLEL_UP" THEN 
                    	CF_JURO_NII_VAR = CAPITAL_REM_NII * PARALLEL_UP_NII*(PERIOD_PAG_M_NII/12);
                	ELSE IF CENARIO = "PARALLEL_DOWN" THEN 
                    	CF_JURO_NII_VAR = CAPITAL_REM_NII * PARALLEL_DOWN_NII*(PERIOD_PAG_M_NII/12);
                	ELSE IF CENARIO = "SHORT_RATE_UP" THEN 
                    	CF_JURO_NII_VAR = CAPITAL_REM_NII * SHORT_RATE_UP_NII*(PERIOD_PAG_M_NII/12);
                	ELSE IF CENARIO = "SHORT_RATE_DOWN" THEN 
                    	CF_JURO_NII_VAR = CAPITAL_REM_NII * SHORT_RATE_DOWN_NII*(PERIOD_PAG_M_NII/12);
                	ELSE IF CENARIO = "STEEPENER" THEN 
                    	CF_JURO_NII_VAR = CAPITAL_REM_NII * STEEPENER_NII*(PERIOD_PAG_M_NII/12);
                	ELSE IF CENARIO = "FLATTENER" THEN 
                    	CF_JURO_NII_VAR = CAPITAL_REM_NII * FLATTENER_NII*(PERIOD_PAG_M_NII/12);
					END;
            END;
        END;
        ELSE DO;
            CF_JURO_SPREAD = 0;
            CF_JURO_VAR = 0;
			
			CF_JURO_NII_VAR=0;
			CF_JURO_NII=0;
        END;
        CAPITAL_REM = CAPITAL_REM - CF_CAPITAL;
		CAPITAL_REM_NII=CAPITAL_REM_NII-CF_CAPITAL_NII;
    END;
RUN;




data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run;



%MEND;
%MACRO DataProjVarFixa(AUX_PROJECAO_DP_F, DP_PROJ_GROUP_VAR, DP_PROJ_GROUP_FIXA);
data _null_;
    call sleep(1, 1); /* Aguarda 1 segundo */
run;

DATA WORK.DP_PROJ_GROUP;
	SET &AUX_PROJECAO_DP_F.;
	IF TIPO_TAXA="V" THEN DO;
		IF (DATA_PROXIMA_REPRICING<=DATA_PROJ) AND (DATA_PROXIMA_REPRICING NOT = .) AND (DATA_PROXIMA_REPRICING NE DATA_FIM)
			THEN DATA_PROJ_V=INTNX('MONTH',DATA_PROXIMA_REPRICING,0,'E');
		END;
	FORMAT DATA_PROJ DATA_PROJ_V DATE9.;
	RUN;

data _null_;
    call sleep(1, 1); /* Aguarda 1 segundo */
run;

DATA &DP_PROJ_GROUP_VAR.(DROP=CF_JURO_SPREAD CF_JURO_NII_VAR CF_CAPITAL_NII CF_JURO_NII);
	SET WORK.DP_PROJ_GROUP;
	WHERE DATA_PROJ_V NOT = .;
	
	FORMAT DATA_PROJ_V DATE9.;
	RUN;

PROC SQL;
	CREATE TABLE &DP_PROJ_GROUP_VAR. AS
	SELECT 
	TIPOLOGIA_OPERACAO
	,MOEDA
	,TIPO_CLIENTE
	,TIPO_CARTEIRA
	,CENARIO
	,DSC_PRODUTO
	,TIPO_TAXA
	,ID_INDEXANTE
	,RATING
	,FREQUENCIA_PAGAMENTO
	,FREQUENCIA_PAGAMENTO_JURO
	,PERIOD_REVISAO_TAXA
	,CCF
	,ELEG_NII
	,RUBRICA
	,TX_JURO
	,SPREAD
	,CAPITAL_VINCENDO
	,EXPOSICAO_ON_BALANCE
	,ID_OPERACAO
	,DATA_INICIO
	,DATA_PROXIMA_REPRICING	
	,DATA_PROX_PAG
	,DATA_REF
	,DATA_FIM
	,PERIOD_PAG_M_JURO
	,PERIOD_PAG_M_CAP
	,MATURIDADE_RESIDUAL
	,PRAZO
	,TIPO_PAGAMENTO
	,TIPO_AMORTIZACAO
	,TX_J_FIXA_A
	,JURO_NII
	,FREQ_JURO_NII
	,min(T_MES) as T_MES
	,MIN(N_PAG) AS N_PAG
	,MIN(CAPITAL_REM) AS CAPITAL_REM
	,SUM(CF_CAPITAL) AS CF_CAPITAL
	,SUM(CF_JURO_VAR) AS CF_JURO_VAR
	,DATA_PROJ_V
	,DATA_PROJ_V AS DATA_PROJ FORMAT=DATE9.
	FROM &DP_PROJ_GROUP_VAR.
	GROUP BY ID_OPERACAO,DATA_REF,DATA_INICIO,DATA_FIM,MOEDA,TIPOLOGIA_OPERACAO
		,DSC_PRODUTO ,TIPO_CARTEIRA,RUBRICA,EXPOSICAO_ON_BALANCE
		,CAPITAL_VINCENDO,TX_JURO,TIPO_TAXA,CCF,SPREAD,DATA_PROXIMA_REPRICING
		,DATA_PROX_PAG,FREQUENCIA_PAGAMENTO_JURO,FREQUENCIA_PAGAMENTO,PERIOD_REVISAO_TAXA
		,RATING,CENARIO,TIPO_CLIENTE,ELEG_NII,TIPO_AMORTIZACAO,PERIOD_PAG_M_CAP,PERIOD_PAG_M_JURO,MATURIDADE_RESIDUAL
		,PRAZO,TIPO_PAGAMENTO,TX_J_FIXA_A, FREQ_JURO_NII,JURO_NII
		,ID_INDEXANTE,DATA_PROJ_V;
		QUIT;

											
data _null_;
    call sleep(1, 1); /* Aguarda 1 segundo */
run;

DATA &DP_PROJ_GROUP_FIXA.;
	SET WORK.DP_PROJ_GROUP;
	IF DATA_PROJ_V NE . THEN DO;
	CF_CAPITAL=0;
	CAPITAL_REM=0;
	CF_JURO_VAR=0;
	END;
	
	FORMAT DATA_PROJ DATE9.;
	RUN;

data _null_;
    call sleep(3, 1); /* Aguarda 1 segundo */
run;

proc datasets lib=AUX nolist;
    delete DP_PROJ_GROUP;
	quit;



%MEND;

%MACRO ProjecaoDP(TABELA_MASTER, BUCKET, CURVAS_INDEXANTES, OUPUT);

DATA AUX.OPERACOES_OFF(DROP=MATURIDADE_RESIDUAL DATA_FIM);
	SET &TABELA_MASTER.(DROP=EXPOSICAO_ON_BALANCE DATA_INICIO);
	WHERE EXPOSICAO_OFF_BALANCE NE 0;
	IF DATA_FIM<=DATA_REF THEN DATA_FIM_A=INTNX('day', DATA_REF, 1);
		ELSE DATA_FIM_A=DATA_FIM;
	MATURIDADE_RESIDUAL=INTCK('month', DATA_REF, DATA_FIM_A);
	CAPITAL_VINCENDO=(EXPOSICAO_OFF_BALANCE*CCF)/ MATURIDADE_RESIDUAL;
	MONTANTE_CAPITAL=CAPITAL_VINCENDO;
	DO i=0 TO MATURIDADE_RESIDUAL-1;
		OUTPUT;
		END;
	RUN;



DATA AUX.OPERACOES_OFF_0(DROP=ID_OPERACAO_I i DATA_FIM_A);
	SET AUX.OPERACOES_OFF(RENAME=(DATA_FIM_A= DATA_FIM ID_OPERACAO= ID_OPERACAO_I));
	ID_OPERACAO=CATX('-', ID_OPERACAO_I, "OFF",i);
	DATA_INICIO= INTNX('MONTH', DATA_REF, i, 'B');

	RUN;

%MapeamentPeriodMeses(AUX.OPERACOES_OFF_0,PERIOD_REVISAO_TAXA,MESES_REVISAO,AUX.OPERACOES_OFF_1);

DATA AUX.OPERACOES_OFF_2(DROP= DATA_PROXIMA_REPRICING_A DATA_PROX_PAG_A );
	SET AUX.OPERACOES_OFF_1(RENAME=(DATA_PROXIMA_REPRICING=DATA_PROXIMA_REPRICING_A DATA_PROX_PAG=DATA_PROX_PAG_A));

	IF DATA_PROXIMA_REPRICING_A<DATA_INICIO THEN 
			DATA_PROXIMA_REPRICING=INTNX('MONTH', DATA_INICIO, MESES_REVISAO,'S');
		ELSE DATA_PROXIMA_REPRICING=DATA_PROXIMA_REPRICING_A;	
	IF DATA_PROX_PAG_A<DATA_INICIO THEN 
			DATA_PROX_PAG=INTNX('MONTH', DATA_INICIO, MESES_REVISAO,'S');
		ELSE DATA_PROX_PAG=DATA_PROX_PAG_A;
	RUN;

DATA AUX.INPUT_PROJ_IRRB_EVE;
	LENGTH ID_OPERACAO $42;
	SET &TABELA_MASTER. AUX.OPERACOES_OFF_2;
	LENGTH ID_OPERACAO $42;
	RUN;

%CalculoProj(AUX.INPUT_PROJ_IRRB_EVE, &CURVAS_INDEXANTES., AUX.T_PLANO_FINANCEIRO, WORK.AUX_PROJECAO_DP);

DATA work.AUX_PROJECAO_DP_F(KEEP=ID_OPERACAO DESCONTO NOME_CONTRAPARTE DATA_REF DATA_INICIO DATA_FIM MOEDA TIPOLOGIA_OPERACAO DSC_PRODUTO CLASSE_ENTIDADE
			TIPO_CARTEIRA RUBRICA EXPOSICAO_ON_BALANCE	EXPOSICAO_OFF_BALANCE EXTRAPATRIMONIAL PATRIMONIAL CAPITAL_VINCENDO	CAPITAL_VENCIDO
			JURO_VINCENDO MONTANTE_CAPITAL	MONTANTE_JURO TX_JURO TAXA_JURO_EFECTIVA TIPO_TAXA CCF	SPREAD INDEXANTE FLG_RAISIN	FLG_DP_RENOVAVEL
			FLG_DP_MOBILIZAVEL	DATA_ULTIMO_REPRICING DATA_PROXIMA_REPRICING DATA_ULT_PAG DATA_PROX_PAG	DATA_CALL_OPTION 
			FREQUENCIA_PAGAMENTO_JURO FREQUENCIA_PAGAMENTO	PERIOD_REVISAO_TAXA	STAGE	FIXING	DURATION RATING	CENARIO	TIPO_NEGOCIO
			FLG_SME	FLAG_FINANCIAL	FLG_PENALIZACAO	TIPO_CLIENTE NIVEL_FAIR_VALUE ELEG_NII	MES_MATURIDADE	NOVA_PROD 
			TIPO_AMORTIZACAO PERIOD_PAG_M_CAP PERIOD_PAG_M_JURO MATURIDADE_RESIDUAL PRAZO	TIPO_PAGAMENTO	TX_J_FIXA_A	T_MES N_PAG	CAPITAL_REM	CF_CAPITAL
			CF_JURO_SPREAD	CF_JURO_VAR PERIOD_PAG_M_NII FREQ_JURO_NII JURO_NII CAPITAL_REM_NII CF_JURO_NII CF_JURO_NII_VAR CF_CAPITAL_NII 
			ID_INDEXANTE DATA_PROJ TX_VARIAVEL_A PAIS);
	RETAIN ID_OPERACAO DESCONTO	NOME_CONTRAPARTE DATA_REF DATA_INICIO DATA_FIM	MOEDA TIPOLOGIA_OPERACAO DSC_PRODUTO CLASSE_ENTIDADE
			TIPO_CARTEIRA RUBRICA EXPOSICAO_ON_BALANCE	EXPOSICAO_OFF_BALANCE EXTRAPATRIMONIAL PATRIMONIAL CAPITAL_VINCENDO	CAPITAL_VENCIDO
			JURO_VINCENDO MONTANTE_CAPITAL	MONTANTE_JURO TX_JURO TAXA_JURO_EFECTIVA TIPO_TAXA CCF	SPREAD INDEXANTE FLG_RAISIN	FLG_DP_RENOVAVEL
			FLG_DP_MOBILIZAVEL	DATA_ULTIMO_REPRICING DATA_PROXIMA_REPRICING DATA_ULT_PAG DATA_PROX_PAG	DATA_CALL_OPTION 
			FREQUENCIA_PAGAMENTO_JURO FREQUENCIA_PAGAMENTO	PERIOD_REVISAO_TAXA	STAGE	FIXING	DURATION RATING	CENARIO	TIPO_NEGOCIO
			FLG_SME	FLAG_FINANCIAL	FLG_PENALIZACAO	TIPO_CLIENTE NIVEL_FAIR_VALUE ELEG_NII	MES_MATURIDADE	NOVA_PROD 
			TIPO_AMORTIZACAO PERIOD_PAG_M_CAP PERIOD_PAG_M_JURO MATURIDADE_RESIDUAL PRAZO	TIPO_PAGAMENTO	TX_J_FIXA_A	T_MES N_PAG	CAPITAL_REM	CF_CAPITAL
			CF_JURO_SPREAD	CF_JURO_VAR PERIOD_PAG_M_NII FREQ_JURO_NII JURO_NII CAPITAL_REM_NII CF_JURO_NII 
			CF_JURO_NII_VAR CF_CAPITAL_NII ID_INDEXANTE DATA_PROJ TX_VARIAVEL_A PAIS
			;
	SET WORK.AUX_PROJECAO_DP;
	IF CF_JURO_SPREAD=. THEN CF_JURO_SPREAD=0;
		ELSE CF_JURO_SPREAD=CF_JURO_SPREAD;
	IF CF_JURO_VAR=. OR INDEX(ID_OPERACAO, 'OFF')>0 THEN CF_JURO_VAR=0;
		ELSE CF_JURO_VAR=CF_JURO_VAR;
	IF CF_CAPITAL=. THEN CF_CAPITAL=0;
		ELSE CF_CAPITAL=CF_CAPITAL;
	IF ((CF_JURO_NII_VAR=.) OR (ELEG_NII NE 'S')) THEN CF_JURO_NII_VAR=0;
		ELSE CF_JURO_NII_VAR=CF_JURO_NII_VAR;
	IF ((CF_JURO_NII=.) OR (ELEG_NII NE 'S')) THEN CF_JURO_NII=0;
		ELSE CF_JURO_NII=CF_JURO_NII;
	IF ((CF_CAPITAL_NII=.) OR (ELEG_NII NE 'S')) THEN CF_CAPITAL_NII=0;
		ELSE CF_CAPITAL_NII=CF_CAPITAL_NII;
	IF ((CAPITAL_REM_NII=.) OR (ELEG_NII NE 'S')) THEN CAPITAL_REM_NII=0;
		ELSE CAPITAL_REM_NII=CAPITAL_REM_NII;
	FORMAT DATA_PROJ DATE9.;
	RUN;

%DataProjVarFixa(work.AUX_PROJECAO_DP_F, AUX.DP_PROJ_GROUP_VAR_0, AUX.DP_PROJ_GROUP_FIXA_0);



DATA WORK.PROJECAO_FIXA_VAR;
	SET AUX.DP_PROJ_GROUP_VAR_0	AUX.DP_PROJ_GROUP_FIXA_0;
	RUN;

DATA AUX.PROJECAO_FIXA_VAR_1;
	SET WORK.PROJECAO_FIXA_VAR;
	IF DATA_PROJ=. THEN DATA_PROJ=DATA_PROJ_V;
		ELSE DATA_PROJ=DATA_PROJ;
	IF DATA_FIM = INTNX('day', DATA_REF, 1) THEN DATA_PROJ=INTNX('day', DATA_REF, 1);
		ELSE DATA_PROJ=DATA_PROJ;
	FORMAT DATA_PROJ DATE9.;
	IF CF_JURO_SPREAD=. THEN CF_JURO_SPREAD=0;
		ELSE CF_JURO_SPREAD=CF_JURO_SPREAD;
	IF CF_CAPITAL=. THEN CF_CAPITAL=0;
		ELSE CF_CAPITAL=CF_CAPITAL;
	CF_TOTAL=CF_CAPITAL + CF_JURO_SPREAD + CF_JURO_VAR;
	RUN;

PROC SQL;
	CREATE TABLE AUX.ALOCACAO_BUCKET AS
		SELECT *
		,B.Categoria as BUCKET_CAPITAL

		FROM AUX.PROJECAO_FIXA_VAR_1 AS A
		LEFT JOIN &BUCKET. AS B
		ON A.DATA_PROJ >= B.Inicio AND A.DATA_PROJ <= B.Fim;
	QUIT;


PROC SQL;
	CREATE TABLE AUX.PROJ_GROUP_2 AS
		SELECT TIPO_CARTEIRA
		,TIPO_TAXA
		,TIPO_CLIENTE
		,TIPOLOGIA_OPERACAO
		,CENARIO
		,MOEDA
		,BUCKET_CAPITAL AS BUCKET
		,SUM(CF_CAPITAL) AS CF_CAPITAL
		,SUM(CF_JURO_VAR) AS CF_JURO_VAR
		,SUM(CF_JURO_NII) AS CF_JURO_NII
		,SUM(CF_JURO_SPREAD) AS CF_JURO_SPREAD
		,SUM(CF_JURO_NII_VAR) AS CF_JURO_NII_VAR 
		,SUM(CF_CAPITAL_NII) AS CF_CAPITAL_NII
	FROM AUX.ALOCACAO_BUCKET 
    GROUP BY TIPOLOGIA_OPERACAO, BUCKET, TIPO_CLIENTE, TIPO_CARTEIRA, MOEDA, CENARIO, TIPO_TAXA;
	QUIT;


DATA AUX.DP_PROJ_GROUP_2;
	SET AUX.PROJ_GROUP_2;
	/*IF BUCKET="" THEN BUCKET=BUCKET_JURO;
	IF CF_CAPITAL=. THEN CF_CAPITAL=CF_CAPITAL_VAR;*/
	IF CF_JURO_VAR=. THEN CF_JURO_VAR=0;
	IF ((CF_JURO_NII=.) OR (ELEG_NII NE 'S')) THEN CF_JURO_NII=0;
	IF ((CF_CAPITAL_NII=.) OR (ELEG_NII NE 'S')) THEN CF_CAPITAL_NII=0;
	IF (CF_JURO_NII_VAR=. OR (ELEG_NII NE 'S')) THEN CF_JURO_NII_VAR=0;

	IF CF_JURO_SPREAD=. THEN CF_JURO_SPREAD=0;
		ELSE CF_JURO_SPREAD=CF_JURO_SPREAD;
	IF CF_CAPITAL=. THEN CF_CAPITAL=0;
		ELSE CF_CAPITAL=CF_CAPITAL;
	CF_TOTAL=CF_CAPITAL + CF_JURO_SPREAD + CF_JURO_VAR;
	CF_JURO_NII_TOTAL= CF_JURO_NII_VAR+CF_JURO_NII;
	RUN;

PROC SQL;
	CREATE TABLE AUX.DP_PROJ_GROUP_2_1  AS
		SELECT
		TIPO_CARTEIRA
		,TIPO_TAXA
		,TIPO_CLIENTE
		,TIPOLOGIA_OPERACAO
		,CENARIO
		,MOEDA
		,BUCKET 
		,SUM(CF_JURO_NII) AS CF_JURO_NII
		,SUM(CF_JURO_NII_VAR) AS CF_JURO_NII_VAR 
		,SUM(CF_CAPITAL_NII) AS CF_CAPITAL_NII
		,SUM(CF_CAPITAL) AS CF_CAPITAL
		,SUM(CF_JURO_SPREAD) AS CF_JURO_SPREAD
		,SUM(CF_JURO_VAR) AS CF_JURO_VAR
		,SUM(CF_TOTAL) AS CF_TOTAL
		,SUM(CF_JURO_NII_TOTAL) AS CF_JURO_NII_TOTAL
	FROM AUX.DP_PROJ_GROUP_2
    GROUP BY TIPOLOGIA_OPERACAO, BUCKET, TIPO_CLIENTE, TIPO_CARTEIRA, MOEDA, CENARIO, TIPO_TAXA;
	QUIT;

PROC SORT DATA=AUX.DP_PROJ_GROUP_2_1 OUT=AUX.DP_PROJ_GROUP_3;
    BY TIPOLOGIA_OPERACAO CENARIO TIPO_CLIENTE TIPO_CARTEIRA MOEDA TIPO_TAXA;
RUN;

PROC TRANSPOSE DATA=AUX.DP_PROJ_GROUP_3 OUT=&OUPUT.;
    BY TIPOLOGIA_OPERACAO CENARIO TIPO_CLIENTE TIPO_CARTEIRA MOEDA TIPO_TAXA;
    ID BUCKET;
    VAR CF_TOTAL CF_JURO_NII_TOTAL;
RUN;

DATA &OUPUT.;
	RETAIN TIPOLOGIA_OPERACAO CENARIO TIPO_CLIENTE TIPO_CARTEIRA MOEDA TIPO_TAXA _NAME_	
		'Overnight'n 'Greater than 1 month up to 3 mon'n 'Greater than 3 months up to 6 mo'n
		'Greater than 6 months up to 9 mo'n	'Greater than 9 months up to 12 m'n 'Greater than 12 months up to 1.5'n
		'Greater than 1.5 years up to 2 y'n 'Greater than 2 years up to 3 yea'n 'Greater than 3 years up to 4 yea'n
		'Greater than 4 years up to 5 yea'n	'Greater than 5 years up to 6 yea'n 'Greater than 6 years up to 7 yea'n
		'Greater than 7 years up to 8 yea'n 'Greater than 8 years up to 9 yea'n 'Greater than 9 years up to 10 ye'n
		'Greater than 10 years up to 15 y'n;
	SET &OUPUT.;
	RUN;

%MEND;

%MACRO AlocacaoOvernight(TABELA_MASTER, OUTPUT);

PROC SQL;
	CREATE TABLE AUX.AUX_ALOCACAO_OVERNINGHT_BAL AS	
		SELECT *
			,INTCK('month', DATA_REF, DATA_FIM) AS MATURIDADE_RESIDUAL
			,MONTANTE_CAPITAL AS MONTANTE_CAPITAL_R
		FROM (SELECT * FROM &TABELA_MASTER. WHERE TIPOLOGIA_OPERACAO="CAIXA" OR TIPOLOGIA_OPERACAO="DISPONIBILIDADES IC");


		QUIT;

PROC SQL;
	CREATE TABLE AUX.AUX_ALOCACAO_OVERNINGHT_CREDITO AS	
		SELECT *
			,INTCK('month', DATA_REF, DATA_FIM) AS MATURIDADE_RESIDUAL
			,CAPITAL_VENCIDO AS MONTANTE_CAPITAL_R
		FROM (SELECT * FROM &TABELA_MASTER. WHERE  (TIPOLOGIA_OPERACAO="CREDITO") AND
								((CAPITAL_VENCIDO NE 0 AND CAPITAL_VENCIDO NE .)));
		QUIT;

PROC SQL;
	CREATE TABLE AUX.AUX_ALOCACAO_OVERNINGHT_CC_CR AS	
		SELECT *
			,INTCK('month', DATA_REF, DATA_FIM) AS MATURIDADE_RESIDUAL
			,CAPITAL_VENCIDO AS MONTANTE_CAPITAL_R
		FROM (SELECT * FROM &TABELA_MASTER. WHERE (TIPOLOGIA_OPERACAO="CC" OR TIPOLOGIA_OPERACAO="CR") AND
			((CAPITAL_VENCIDO NE 0 AND CAPITAL_VENCIDO NE .)));

QUIT;

PROC SQL;
	CREATE TABLE AUX.AUX_ALOCACAO_OVERNINGHT_CARTAS AS	
		SELECT *
			,INTCK('month', DATA_REF, DATA_FIM) AS MATURIDADE_RESIDUAL
			,CAPITAL_VENCIDO AS MONTANTE_CAPITAL_R
		FROM (SELECT * FROM &TABELA_MASTER. WHERE TIPOLOGIA_OPERACAO="CARTAS_CRED" AND
			((CAPITAL_VENCIDO NE 0 AND CAPITAL_VENCIDO NE .)));

		QUIT;

DATA AUX.AUX_ALOCACAO_OVERNINGHT_1;
	SET AUX.AUX_ALOCACAO_OVERNINGHT_BAL 
		AUX.AUX_ALOCACAO_OVERNINGHT_CREDITO
		AUX.AUX_ALOCACAO_OVERNINGHT_CC_CR
		AUX.AUX_ALOCACAO_OVERNINGHT_CARTAS;
		RUN;
		

DATA AUX.AUX_ALOCACAO_OVERNINGHT_2;
	SET AUX.AUX_ALOCACAO_OVERNINGHT_1;
	DO T_MES=0 TO 1;
	OUTPUT;
	END;
	RUN;

DATA AUX.AUX_ALOCACAO_OVERNINGHT_3;
	SET AUX.AUX_ALOCACAO_OVERNINGHT_2;
	
	IF T_MES=0 THEN DATA_PROJ=DATA_REF;
		ELSE DATA_PROJ=intnx('MONTH', DATA_REF, T_MES, 'END');	
	FORMAT DATA_PROJ date9.;
	RUN;

	PROC SQL;
		CREATE TABLE AUX.AUX_ALOCACAO_OVERNINGHT_4 AS
		SELECT *
			,CASE WHEN T_MES=0 AND TIPOLOGIA_OPERACAO NOT IN ('CAIXA', 'DISPONIBILIDADES IC','CREDITO') THEN
		 			MONTANTE_CAPITAL_R*CCF
				WHEN T_MES=0 AND TIPOLOGIA_OPERACAO IN ('CAIXA', 'DISPONIBILIDADES IC','CREDITO') THEN
					MONTANTE_CAPITAL_R
		 		ELSE 0
		 		END AS CAPITAL_REMANESCENTE
			,CASE WHEN T_MES=1 AND TIPOLOGIA_OPERACAO NOT IN ('CAIXA', 'DISPONIBILIDADES IC','CREDITO') THEN
		 			MONTANTE_CAPITAL_R*CCF
				WHEN T_MES=0 AND TIPOLOGIA_OPERACAO IN ('CAIXA', 'DISPONIBILIDADES IC','CREDITO') THEN
					MONTANTE_CAPITAL_R
		 		ELSE 0
		 		END AS CF_CAPITAL
			,'Overnight' AS BUCKET
			FROM AUX.AUX_ALOCACAO_OVERNINGHT_3;
			QUIT;

PROC SQL;
	CREATE TABLE AUX.AUX_ALOCACAO_OVERNINGHT_5  AS
		SELECT
		TIPO_CARTEIRA
		,TIPO_TAXA
		,CLASSE_ENTIDADE
		,TIPO_CLIENTE
		,TIPOLOGIA_OPERACAO
		,CENARIO
		,MOEDA
		,BUCKET 
		,SUM(CF_CAPITAL) AS CF_CAPITAL
		,SUM(CF_CAPITAL) AS CF_TOTAL
	FROM AUX.AUX_ALOCACAO_OVERNINGHT_4
    GROUP BY TIPOLOGIA_OPERACAO, BUCKET, TIPO_CLIENTE, CLASSE_ENTIDADE, TIPO_CARTEIRA, MOEDA, CENARIO, TIPO_TAXA;
	QUIT;

PROC SORT DATA=AUX.AUX_ALOCACAO_OVERNINGHT_5 OUT=AUX.AUX_ALOCACAO_OVERNINGHT_6;
    BY TIPOLOGIA_OPERACAO CENARIO TIPO_CLIENTE CLASSE_ENTIDADE TIPO_CARTEIRA MOEDA TIPO_TAXA;
RUN;

PROC TRANSPOSE DATA=AUX.AUX_ALOCACAO_OVERNINGHT_6 OUT=&OUTPUT.;
    BY TIPOLOGIA_OPERACAO CENARIO TIPO_CLIENTE CLASSE_ENTIDADE TIPO_CARTEIRA MOEDA TIPO_TAXA;
    ID BUCKET;
    VAR CF_TOTAL;
RUN;

DATA &OUTPUT.;
	RETAIN TIPOLOGIA_OPERACAO CENARIO TIPO_CLIENTE CLASSE_ENTIDADE TIPO_CARTEIRA MOEDA TIPO_TAXA _NAME_	
		'Overnight'n 'Greater than 1 month up to 3 mon'n 'Greater than 3 months up to 6 mo'n
		'Greater than 6 months up to 9 mo'n	'Greater than 9 months up to 12 m'n 'Greater than 12 months up to 1.5'n
		'Greater than 1.5 years up to 2 y'n 'Greater than 2 years up to 3 yea'n 'Greater than 3 years up to 4 yea'n
		'Greater than 4 years up to 5 yea'n	'Greater than 5 years up to 6 yea'n 'Greater than 6 years up to 7 yea'n
		'Greater than 7 years up to 8 yea'n 'Greater than 8 years up to 9 yea'n 'Greater than 9 years up to 10 ye'n
		'Greater than 10 years up to 15 y'n;
	SET &OUTPUT.;
	RUN;
%MEND;


%MACRO AlocacaoTaxaCenario(INPUT, OUTPUT, CURVAS);

DATA AUX.PROJECOES_PARALLEL_UP;
	SET &INPUT.(DROP=CENARIO);
		CENARIO="PARALLEL_UP";
		RUN;

DATA AUX.PROJECOES_PARALLEL_DOWN;
	SET &INPUT.(DROP=CENARIO);
		CENARIO="PARALLEL_DOWN";
		RUN;

DATA AUX.PROJECOES_SHORT_RATE_UP;
	SET &INPUT.(DROP=CENARIO);
		CENARIO="SHORT_RATE_UP";
		RUN;

DATA AUX.PROJECOES_SHORT_RATE_DOWN;
	SET &INPUT.(DROP=CENARIO);
		CENARIO="SHORT_RATE_DOWN";
		RUN;

DATA AUX.PROJECOES_STEEPENER;
	SET &INPUT.(DROP=CENARIO);
		CENARIO="STEEPENER";
		RUN;

DATA AUX.PROJECOES_FLATTENER;
	SET &INPUT.(DROP=CENARIO);
		CENARIO="FLATTENER";
		RUN;

DATA AUX.CONCAT_TODOS_CENARIOS;
	SET AUX.PROJECOES_SHORT_RATE_DOWN &INPUT. AUX.PROJECOES_FLATTENER 
		AUX.PROJECOES_SHORT_RATE_UP AUX.PROJECOES_STEEPENER
		AUX.PROJECOES_PARALLEL_DOWN AUX.PROJECOES_PARALLEL_UP;
		RUN;

PROC SQL;
	CREATE TABLE &OUTPUT. AS
		SELECT 
		PRJ.*
		,CURV.CURVA AS BASELINE
        ,CURV.PARALLEL_UP   
        ,CURV.PARALLEL_DOWN      
        ,CURV.SHORT_RATE_UP      
        ,CURV.SHORT_RATE_DOWN    
        ,CURV.STEEPENER          
        ,CURV.FLATTENER         
		FROM AUX.CONCAT_TODOS_CENARIOS  PRJ
		LEFT JOIN  &CURVAS. CURV
		ON PRJ.DATA_CURVA=CURV.DATAS AND PRJ.ID_INDEXANTE=CURV.ID_INDEXANTE;
		QUIT;


%MEND;


%MACRO Tabela_Final_Proj(PROJ_OVERNIGHT, PROJ_DO, PROJ_DP, T_PROJECOES, CURVAS);

DATA &PROJ_DO.(KEEP=TIPO_CARTEIRA TIPO_TAXA TIPO_CLIENTE TIPOLOGIA_OPERACAO CLASSE_ENTIDADE
					CENARIO MOEDA BUCKET CF_CAPITAL CF_JURO_SPREAD 
					CF_JURO_VAR CF_TOTAL ID_OPERACAO DATA_PROJ DATA_REF ID_INDEXANTE FLG_OFF);
	SET AUX.PROJECAO_DO_TIPOLOGIA_CLIENTE_2;
		CF_JURO_SPREAD=0;
		IF N_Cash_Flow_Payment=. THEN CF_CAPITAL=0;
			ELSE CF_CAPITAL=N_Cash_Flow_Payment;
		CF_TOTAL=CF_CAPITAL;
		CF_JURO_VAR=0;
		FLG_OFF="N";
	RUN;

DATA &PROJ_DP.(KEEP=TIPO_CARTEIRA TIPO_TAXA TIPO_CLIENTE TIPOLOGIA_OPERACAO CLASSE_ENTIDADE
					CENARIO MOEDA BUCKET CF_CAPITAL CF_JURO_SPREAD
					CF_JURO_VAR CF_TOTAL ID_OPERACAO DATA_PROJ DATA_REF ID_INDEXANTE
					FLG_OFF);
	SET AUX.ALOCACAO_BUCKET(RENAME=(BUCKET_CAPITAL=BUCKET));
	
	CF_TOTAL=CF_CAPITAL + CF_JURO_SPREAD + CF_JURO_VAR;
	IF INDEX(ID_OPERACAO, 'OFF') > 0 THEN FLG_OFF = "Y";
		ELSE FLG_OFF = "N";
		RUN;

DATA &PROJ_OVERNIGHT.(KEEP=TIPO_CARTEIRA TIPO_TAXA TIPO_CLIENTE TIPOLOGIA_OPERACAO CLASSE_ENTIDADE
					CENARIO MOEDA BUCKET CF_CAPITAL CF_JURO_SPREAD 
					CF_JURO_VAR CF_TOTAL ID_OPERACAO DATA_PROJ DATA_REF ID_INDEXANTE
						FLG_OFF);
	SET AUX.AUX_ALOCACAO_OVERNINGHT_4(RENAME=(CENARIO=CENARIO_AUX));
		CF_JURO_SPREAD=0;
		CF_TOTAL=CF_CAPITAL;
		CF_JURO_VAR=0;
		DATA_PROJ=DATA_REF+1;
		FORMAT DATA_PROJ DATE9.;
		CENARIO="BASELINE";
		FLG_OFF="N";

	RUN;

DATA &T_PROJECOES.;
	length TIPOLOGIA_OPERACAO $32 MOEDA $4 TIPO_CLIENTE $50 TIPO_CARTEIRA $50 TIPO_TAXA $1
			ID_OPERACAO $36 NIVEL_FAIR_VALUE $3 RATING $32 PAIS $10 CLASSE_ENTIDADE $32
					TIPO_CLIENTE $32;
	SET &PROJ_OVERNIGHT.;
RUN;



DATA WORK.PROJECOES_PARALLEL_UP;
	SET &T_PROJECOES.(DROP=CENARIO);
		CENARIO="PARALLEL_UP";
		RUN;

DATA WORK.PROJECOES_PARALLEL_DOWN;
	SET &T_PROJECOES.(DROP=CENARIO);
		CENARIO="PARALLEL_DOWN";
		RUN;

DATA WORK.PROJECOES_SHORT_RATE_UP;
	SET &T_PROJECOES.(DROP=CENARIO);
		CENARIO="SHORT_RATE_UP";
		RUN;

DATA WORK.PROJECOES_SHORT_RATE_DOWN;
	SET &T_PROJECOES.(DROP=CENARIO);
		CENARIO="SHORT_RATE_DOWN";
		RUN;

DATA WORK.PROJECOES_STEEPENER;
	SET &T_PROJECOES.(DROP=CENARIO);
		CENARIO="STEEPENER";
		RUN;

DATA WORK.PROJECOES_FLATTENER;
	SET &T_PROJECOES.(DROP=CENARIO);
		CENARIO="FLATTENER";
		RUN;

DATA WORK.CONCAT_TODOS_CENARIOS_2;
	SET  &PROJ_DP. WORK.PROJECOES_SHORT_RATE_DOWN &T_PROJECOES. WORK.PROJECOES_FLATTENER 
		WORK.PROJECOES_SHORT_RATE_UP WORK.PROJECOES_STEEPENER &PROJ_DO.
		WORK.PROJECOES_PARALLEL_DOWN WORK.PROJECOES_PARALLEL_UP;
		RUN;

PROC SQL;
	CREATE TABLE WORK.CURVAS_CENARIOS_EUR AS
		SELECT 
		PRJ.*
		,CURV.CURVA AS BASELINE
        ,CURV.PARALLEL_UP   
        ,CURV.PARALLEL_DOWN      
        ,CURV.SHORT_RATE_UP      
        ,CURV.SHORT_RATE_DOWN    
        ,CURV.STEEPENER          
        ,CURV.FLATTENER         
		FROM (SELECT * FROM WORK.CONCAT_TODOS_CENARIOS_2 WHERE MOEDA="EUR") PRJ
		LEFT JOIN (SELECT * FROM &CURVAS. WHERE ID_INDEXANTE="OIS_EUR") CURV
		ON PUT(PRJ.DATA_PROJ, DATE9.) = PUT(CURV.DATAS, DATE9.);
		QUIT;

PROC SQL;
	CREATE TABLE WORK.CURVAS_CENARIOS_USD AS
		SELECT 
		PRJ.*
		,CURV.CURVA AS BASELINE
        ,CURV.PARALLEL_UP   
        ,CURV.PARALLEL_DOWN      
        ,CURV.SHORT_RATE_UP      
        ,CURV.SHORT_RATE_DOWN    
        ,CURV.STEEPENER          
        ,CURV.FLATTENER         
		FROM (SELECT * FROM WORK.CONCAT_TODOS_CENARIOS_2 WHERE MOEDA="USD") PRJ
		LEFT JOIN (SELECT * FROM &CURVAS. WHERE ID_INDEXANTE="OIS_USD") CURV
		ON PUT(PRJ.DATA_PROJ, DATE9.) = PUT(CURV.DATAS, DATE9.);
		QUIT;

DATA OUT.PROJ_EVE_CURVAS_DESC;
	SET WORK.CURVAS_CENARIOS_USD WORK.CURVAS_CENARIOS_EUR;
	RUN;


PROC SQL;
	CREATE TABLE AUX.CASHFLOWS_DESCONTADOS_ID AS
		SELECT
		TIPOLOGIA_OPERACAO
		,MOEDA 
		,TIPO_CLIENTE
		,CLASSE_ENTIDADE
		,TIPO_CARTEIRA 
		,TIPO_TAXA
		,ID_OPERACAO
		,BASELINE
		,PARALLEL_UP
		,PARALLEL_DOWN
		,SHORT_RATE_UP
		,SHORT_RATE_DOWN
		,STEEPENER
		,FLATTENER
		,CENARIO 
		,BUCKET
		,CF_CAPITAL
		,CF_JURO_SPREAD
		,CF_JURO_VAR
		,CF_TOTAL
		,ID_OPERACAO
		,DATA_PROJ
		,DATA_REF 
		,ID_INDEXANTE
		,FLG_OFF
		,CASE WHEN CENARIO="BASELINE" THEN
			CF_CAPITAL/((1+BASELINE)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="PARALLEL_UP" THEN
			CF_CAPITAL/((1+PARALLEL_UP)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="PARALLEL_DOWN" THEN
			CF_CAPITAL/((1+PARALLEL_DOWN)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="SHORT_RATE_UP" THEN
			CF_CAPITAL/((1+SHORT_RATE_UP)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="SHORT_RATE_DOWN" THEN
			CF_CAPITAL/((1+SHORT_RATE_DOWN)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="STEEPENER" THEN
			CF_CAPITAL/((1+STEEPENER)**((DATA_PROJ-DATA_REF)/365))

			WHEN CENARIO="FLATTENER" THEN
			CF_CAPITAL/((1+FLATTENER)**((DATA_PROJ-DATA_REF)/365))

			END AS CF_CAPITAL_DESCT
		,CASE WHEN CENARIO="BASELINE" THEN
			CF_JURO_SPREAD/((1+BASELINE)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="PARALLEL_UP" THEN
			CF_JURO_SPREAD/((1+PARALLEL_UP)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="PARALLEL_DOWN" THEN
			CF_JURO_SPREAD/((1+PARALLEL_DOWN)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="SHORT_RATE_UP" THEN
			CF_JURO_SPREAD/((1+SHORT_RATE_UP)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="SHORT_RATE_DOWN" THEN
			CF_JURO_SPREAD/((1+SHORT_RATE_DOWN)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="STEEPENER" THEN
			CF_JURO_SPREAD/((1+STEEPENER)**((DATA_PROJ-DATA_REF)/365))

			WHEN CENARIO="FLATTENER" THEN
			CF_JURO_SPREAD/((1+FLATTENER)**((DATA_PROJ-DATA_REF)/365))

		END AS CF_JURO_SPREAD_DESCT

		,CASE WHEN CENARIO="BASELINE" THEN
			CF_JURO_VAR/((1+BASELINE)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="PARALLEL_UP" THEN
			CF_JURO_VAR/((1+PARALLEL_UP)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="PARALLEL_DOWN" THEN
			CF_JURO_VAR/((1+PARALLEL_DOWN)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="SHORT_RATE_UP" THEN
			CF_JURO_VAR/((1+SHORT_RATE_UP)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="SHORT_RATE_DOWN" THEN
			CF_JURO_VAR/((1+SHORT_RATE_DOWN)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="STEEPENER" THEN
			CF_JURO_VAR/((1+STEEPENER)**((DATA_PROJ-DATA_REF)/365))

			WHEN CENARIO="FLATTENER" THEN
			CF_JURO_VAR/((1+FLATTENER)**((DATA_PROJ-DATA_REF)/365))

			END AS CF_JURO_VAR_DESCT
			,CASE WHEN CENARIO="BASELINE" THEN
			CF_TOTAL/((1+BASELINE)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="PARALLEL_UP" THEN
			CF_TOTAL/((1+PARALLEL_UP)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="PARALLEL_DOWN" THEN
			CF_TOTAL/((1+PARALLEL_DOWN)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="SHORT_RATE_UP" THEN
			CF_TOTAL/((1+SHORT_RATE_UP)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="SHORT_RATE_DOWN" THEN
			CF_TOTAL/((1+SHORT_RATE_DOWN)**((DATA_PROJ-DATA_REF)/365)) 

			WHEN CENARIO="STEEPENER" THEN
			CF_TOTAL/((1+STEEPENER)**((DATA_PROJ-DATA_REF)/365))

			WHEN CENARIO="FLATTENER" THEN
			CF_TOTAL/((1+FLATTENER)**((DATA_PROJ-DATA_REF)/365))

			END AS CF_TOTAL_DESCT
			FROM OUT.PROJ_EVE_CURVAS_DESC;
			QUIT;


PROC SQL;
	CREATE TABLE OUT.CASHFLOWS_DESCONTADOS AS
	SELECT
	TIPOLOGIA_OPERACAO
	,MOEDA	
	,TIPO_CLIENTE
	,CLASSE_ENTIDADE
	,TIPO_CARTEIRA	
	,TIPO_TAXA	
	,DATA_REF	
	,DATA_PROJ
	,CENARIO
	,BUCKET
	,BASELINE	
	,PARALLEL_UP
	,PARALLEL_DOWN
	,SHORT_RATE_UP
	,SHORT_RATE_DOWN
	,STEEPENER
	,FLATTENER
	,SUM(CF_CAPITAL) AS CF_CAPITAL
	,SUM(CF_JURO_VAR) AS CF_JURO_VAR
	,SUM(CF_JURO_SPREAD) AS CF_JURO_SPREAD
	,SUM(CF_TOTAL) AS CF_TOTAL	
	,SUM(CF_CAPITAL_DESCT) AS CF_CAPITAL_DESCT
	,SUM(CF_JURO_SPREAD_DESCT) AS CF_JURO_SPREAD_DESCT
	,SUM(CF_JURO_VAR_DESCT) AS CF_JURO_VAR_DESCT
	,SUM(CF_TOTAL_DESCT) AS CF_TOTAL_DESCT
	,ID_INDEXANTE
	,FLG_OFF

	FROM (SELECT * FROM AUX.CASHFLOWS_DESCONTADOS_ID WHERE DATA_PROJ>DATA_REF)
		GROUP BY TIPOLOGIA_OPERACAO, MOEDA,TIPO_CLIENTE, CLASSE_ENTIDADE, TIPO_CARTEIRA,TIPO_TAXA,DATA_REF,DATA_PROJ
				,CENARIO,BUCKET,BASELINE,PARALLEL_UP,PARALLEL_DOWN,SHORT_RATE_UP,SHORT_RATE_DOWN
				,STEEPENER,FLATTENER, ID_INDEXANTE, FLG_OFF;
	RUN;

%MEND;